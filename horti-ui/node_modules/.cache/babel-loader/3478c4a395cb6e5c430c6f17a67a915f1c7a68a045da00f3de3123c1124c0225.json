{"ast":null,"code":"'use client';\n\nimport { useRef } from 'react';\nimport { useFloating, offset, hide, shift, limitShift, flip, inline, arrow, size } from '@floating-ui/react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { useFloatingAutoUpdate } from '../Floating/use-floating-auto-update.mjs';\nimport '../Floating/FloatingArrow/FloatingArrow.mjs';\nfunction getDefaultMiddlewares(middlewares) {\n  if (middlewares === void 0) {\n    return {\n      shift: true,\n      flip: true\n    };\n  }\n  const result = {\n    ...middlewares\n  };\n  if (middlewares.shift === void 0) {\n    result.shift = true;\n  }\n  if (middlewares.flip === void 0) {\n    result.flip = true;\n  }\n  return result;\n}\nfunction getPopoverMiddlewares(options, getFloating) {\n  const middlewaresOptions = getDefaultMiddlewares(options.middlewares);\n  const middlewares = [offset(options.offset), hide()];\n  if (middlewaresOptions.shift) {\n    middlewares.push(shift(typeof middlewaresOptions.shift === \"boolean\" ? {\n      limiter: limitShift(),\n      padding: 5\n    } : {\n      limiter: limitShift(),\n      padding: 5,\n      ...middlewaresOptions.shift\n    }));\n  }\n  if (middlewaresOptions.flip) {\n    middlewares.push(typeof middlewaresOptions.flip === \"boolean\" ? flip() : flip(middlewaresOptions.flip));\n  }\n  if (middlewaresOptions.inline) {\n    middlewares.push(typeof middlewaresOptions.inline === \"boolean\" ? inline() : inline(middlewaresOptions.inline));\n  }\n  middlewares.push(arrow({\n    element: options.arrowRef,\n    padding: options.arrowOffset\n  }));\n  if (middlewaresOptions.size || options.width === \"target\") {\n    middlewares.push(size({\n      ...(typeof middlewaresOptions.size === \"boolean\" ? {} : middlewaresOptions.size),\n      apply({\n        rects,\n        availableWidth,\n        availableHeight,\n        ...rest\n      }) {\n        const floating = getFloating();\n        const styles = floating.refs.floating.current?.style ?? {};\n        if (middlewaresOptions.size) {\n          if (typeof middlewaresOptions.size === \"object\" && !!middlewaresOptions.size.apply) {\n            middlewaresOptions.size.apply({\n              rects,\n              availableWidth,\n              availableHeight,\n              ...rest\n            });\n          } else {\n            Object.assign(styles, {\n              maxWidth: `${availableWidth}px`,\n              maxHeight: `${availableHeight}px`\n            });\n          }\n        }\n        if (options.width === \"target\") {\n          Object.assign(styles, {\n            width: `${rects.reference.width}px`\n          });\n        }\n      }\n    }));\n  }\n  return middlewares;\n}\nfunction usePopover(options) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange\n  });\n  const previouslyOpened = useRef(_opened);\n  const onClose = () => {\n    if (_opened) {\n      setOpened(false);\n    }\n  };\n  const onToggle = () => setOpened(!_opened);\n  const floating = useFloating({\n    strategy: options.strategy,\n    placement: options.position,\n    middleware: getPopoverMiddlewares(options, () => floating)\n  });\n  useFloatingAutoUpdate({\n    opened: _opened,\n    position: options.position,\n    positionDependencies: options.positionDependencies || [],\n    floating\n  });\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n  }, [floating.placement]);\n  useDidUpdate(() => {\n    if (_opened !== previouslyOpened.current) {\n      if (!_opened) {\n        options.onClose?.();\n      } else {\n        options.onOpen?.();\n      }\n    }\n    previouslyOpened.current = _opened;\n  }, [_opened, options.onClose, options.onOpen]);\n  return {\n    floating,\n    controlled: typeof options.opened === \"boolean\",\n    opened: _opened,\n    onClose,\n    onToggle\n  };\n}\nexport { usePopover };","map":{"version":3,"names":["getDefaultMiddlewares","middlewares","shift","flip","result","getPopoverMiddlewares","options","getFloating","middlewaresOptions","offset","hide","push","limiter","limitShift","padding","inline","arrow","element","arrowRef","arrowOffset","size","width","apply","rects","availableWidth","availableHeight","rest","floating","styles","refs","current","style","Object","assign","maxWidth","maxHeight","reference","usePopover","_opened","setOpened","useUncontrolled","value","opened","defaultValue","defaultOpened","finalValue","onChange","previouslyOpened","useRef","onClose","onToggle","useFloating","strategy","placement","position","middleware","useFloatingAutoUpdate","positionDependencies","useDidUpdate","onPositionChange","onOpen","controlled"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/core/src/components/Popover/use-popover.ts"],"sourcesContent":["import { useRef } from 'react';\nimport {\n  arrow,\n  flip,\n  hide,\n  inline,\n  limitShift,\n  Middleware,\n  offset,\n  shift,\n  size,\n  useFloating,\n  UseFloatingReturn,\n} from '@floating-ui/react';\nimport { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport {\n  FloatingAxesOffsets,\n  FloatingPosition,\n  FloatingStrategy,\n  useFloatingAutoUpdate,\n} from '../Floating';\nimport { PopoverMiddlewares, PopoverWidth } from './Popover.types';\n\ninterface UsePopoverOptions {\n  offset: number | FloatingAxesOffsets;\n  position: FloatingPosition;\n  positionDependencies: any[] | undefined;\n  onPositionChange?: (position: FloatingPosition) => void;\n  opened: boolean | undefined;\n  defaultOpened: boolean | undefined;\n  onChange?: (opened: boolean) => void;\n  onClose?: () => void;\n  onDismiss?: () => void;\n  onOpen?: () => void;\n  width: PopoverWidth;\n  middlewares: PopoverMiddlewares | undefined;\n  arrowRef: React.RefObject<HTMLDivElement | null>;\n  arrowOffset: number;\n  strategy?: FloatingStrategy;\n}\n\nfunction getDefaultMiddlewares(middlewares: PopoverMiddlewares | undefined): PopoverMiddlewares {\n  if (middlewares === undefined) {\n    return { shift: true, flip: true };\n  }\n\n  const result = { ...middlewares };\n  if (middlewares.shift === undefined) {\n    result.shift = true;\n  }\n\n  if (middlewares.flip === undefined) {\n    result.flip = true;\n  }\n\n  return result;\n}\n\nfunction getPopoverMiddlewares(\n  options: UsePopoverOptions,\n  getFloating: () => UseFloatingReturn<Element>\n) {\n  const middlewaresOptions = getDefaultMiddlewares(options.middlewares);\n  const middlewares: Middleware[] = [offset(options.offset), hide()];\n\n  if (middlewaresOptions.shift) {\n    middlewares.push(\n      shift(\n        typeof middlewaresOptions.shift === 'boolean'\n          ? { limiter: limitShift(), padding: 5 }\n          : { limiter: limitShift(), padding: 5, ...middlewaresOptions.shift }\n      )\n    );\n  }\n\n  if (middlewaresOptions.flip) {\n    middlewares.push(\n      typeof middlewaresOptions.flip === 'boolean' ? flip() : flip(middlewaresOptions.flip)\n    );\n  }\n\n  if (middlewaresOptions.inline) {\n    middlewares.push(\n      typeof middlewaresOptions.inline === 'boolean' ? inline() : inline(middlewaresOptions.inline)\n    );\n  }\n\n  middlewares.push(arrow({ element: options.arrowRef, padding: options.arrowOffset }));\n\n  if (middlewaresOptions.size || options.width === 'target') {\n    middlewares.push(\n      size({\n        ...(typeof middlewaresOptions.size === 'boolean' ? {} : middlewaresOptions.size),\n        apply({ rects, availableWidth, availableHeight, ...rest }) {\n          const floating = getFloating();\n          const styles = floating.refs.floating.current?.style ?? {};\n\n          if (middlewaresOptions.size) {\n            //If custom apply function is given use that else set defaults\n            if (typeof middlewaresOptions.size === 'object' && !!middlewaresOptions.size.apply) {\n              middlewaresOptions.size.apply({ rects, availableWidth, availableHeight, ...rest });\n            } else {\n              Object.assign(styles, {\n                maxWidth: `${availableWidth}px`,\n                maxHeight: `${availableHeight}px`,\n              });\n            }\n          }\n\n          if (options.width === 'target') {\n            Object.assign(styles, {\n              width: `${rects.reference.width}px`,\n            });\n          }\n        },\n      })\n    );\n  }\n\n  return middlewares;\n}\n\nexport function usePopover(options: UsePopoverOptions) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange,\n  });\n  const previouslyOpened = useRef(_opened);\n\n  const onClose = () => {\n    if (_opened) {\n      setOpened(false);\n    }\n  };\n\n  const onToggle = () => setOpened(!_opened);\n\n  const floating: UseFloatingReturn<Element> = useFloating({\n    strategy: options.strategy,\n    placement: options.position,\n    middleware: getPopoverMiddlewares(options, () => floating),\n  });\n\n  useFloatingAutoUpdate({\n    opened: _opened,\n    position: options.position,\n    positionDependencies: options.positionDependencies || [],\n    floating,\n  });\n\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n  }, [floating.placement]);\n\n  useDidUpdate(() => {\n    if (_opened !== previouslyOpened.current) {\n      if (!_opened) {\n        options.onClose?.();\n      } else {\n        options.onOpen?.();\n      }\n    }\n\n    previouslyOpened.current = _opened;\n  }, [_opened, options.onClose, options.onOpen]);\n\n  return {\n    floating,\n    controlled: typeof options.opened === 'boolean',\n    opened: _opened,\n    onClose,\n    onToggle,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}