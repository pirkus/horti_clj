{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport cx from 'clsx';\nimport { factory, useProps, useResolvedStylesApi, InputBase } from '@mantine/core';\nimport classes from './TimeInput.module.css.mjs';\nconst defaultProps = {};\nconst TimeInput = factory((_props, ref) => {\n  const props = useProps(\"TimeInput\", defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    withSeconds,\n    minTime,\n    maxTime,\n    value,\n    onChange,\n    step,\n    ...others\n  } = props;\n  const {\n    resolvedClassNames,\n    resolvedStyles\n  } = useResolvedStylesApi({\n    classNames,\n    styles,\n    props\n  });\n  const checkIfTimeLimitExceeded = val => {\n    if (minTime !== void 0 || maxTime !== void 0) {\n      const [hours, minutes, seconds] = val.split(\":\").map(Number);\n      if (minTime) {\n        const [minHours, minMinutes, minSeconds] = minTime.split(\":\").map(Number);\n        if (hours < minHours || hours === minHours && minutes < minMinutes || withSeconds && hours === minHours && minutes === minMinutes && seconds < minSeconds) {\n          return -1;\n        }\n      }\n      if (maxTime) {\n        const [maxHours, maxMinutes, maxSeconds] = maxTime.split(\":\").map(Number);\n        if (hours > maxHours || hours === maxHours && minutes > maxMinutes || withSeconds && hours === maxHours && minutes === maxMinutes && seconds > maxSeconds) {\n          return 1;\n        }\n      }\n    }\n    return 0;\n  };\n  const onTimeBlur = event => {\n    props.onBlur?.(event);\n    if (minTime !== void 0 || maxTime !== void 0) {\n      const val = event.currentTarget.value;\n      if (val) {\n        const check = checkIfTimeLimitExceeded(val);\n        if (check === 1) {\n          event.currentTarget.value = maxTime;\n          props.onChange?.(event);\n        } else if (check === -1) {\n          event.currentTarget.value = minTime;\n          props.onChange?.(event);\n        }\n      }\n    }\n  };\n  return /* @__PURE__ */jsx(InputBase, {\n    classNames: {\n      ...resolvedClassNames,\n      input: cx(classes.input, resolvedClassNames?.input)\n    },\n    styles: resolvedStyles,\n    unstyled,\n    ref,\n    value,\n    step: step ?? (withSeconds ? 1 : 60),\n    ...others,\n    onChange,\n    onBlur: onTimeBlur,\n    type: \"time\",\n    __staticSelector: \"TimeInput\"\n  });\n});\nTimeInput.classes = InputBase.classes;\nTimeInput.displayName = \"@mantine/dates/TimeInput\";\nexport { TimeInput };","map":{"version":3,"names":["defaultProps","TimeInput","factory","_props","ref","props","useProps","classNames","styles","unstyled","vars","withSeconds","minTime","maxTime","value","onChange","step","others","resolvedClassNames","resolvedStyles","useResolvedStylesApi","checkIfTimeLimitExceeded","val","hours","minutes","seconds","split","map","Number","minHours","minMinutes","minSeconds","maxHours","maxMinutes","maxSeconds","onTimeBlur","event","onBlur","currentTarget","check","jsx","InputBase","input","cx","classes","type","__staticSelector","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/components/TimeInput/TimeInput.tsx"],"sourcesContent":["import cx from 'clsx';\nimport {\n  __BaseInputProps,\n  __InputStylesNames,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  InputBase,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n} from '@mantine/core';\nimport classes from './TimeInput.module.css';\n\nexport interface TimeInputProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<TimeInputFactory>,\n    ElementProps<'input', 'size'> {\n  /** Determines whether seconds input should be displayed, `false` by default */\n  withSeconds?: boolean;\n\n  /** Minimum possible string time, if `withSeconds` is true, time should be in format HH:mm:ss, otherwise HH:mm */\n  minTime?: string;\n\n  /** Maximum possible string time, if `withSeconds` is true, time should be in format HH:mm:ss, otherwise HH:mm */\n  maxTime?: string;\n}\n\nexport type TimeInputFactory = Factory<{\n  props: TimeInputProps;\n  ref: HTMLInputElement;\n  stylesNames: __InputStylesNames;\n}>;\n\nconst defaultProps: Partial<TimeInputProps> = {};\n\nexport const TimeInput = factory<TimeInputFactory>((_props, ref) => {\n  const props = useProps('TimeInput', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    withSeconds,\n    minTime,\n    maxTime,\n    value,\n    onChange,\n    step,\n    ...others\n  } = props;\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<TimeInputFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  /**\n   * Check if time is within limits or not\n   * If the given value is within limits, return 0\n   * If the given value is greater than the maxTime, return 1\n   * If the given value is less than the minTime, return -1\n   */\n  const checkIfTimeLimitExceeded = (val: string) => {\n    if (minTime !== undefined || maxTime !== undefined) {\n      const [hours, minutes, seconds] = val.split(':').map(Number);\n\n      if (minTime) {\n        const [minHours, minMinutes, minSeconds] = minTime.split(':').map(Number);\n\n        if (\n          hours < minHours ||\n          (hours === minHours && minutes < minMinutes) ||\n          (withSeconds && hours === minHours && minutes === minMinutes && seconds < minSeconds)\n        ) {\n          return -1;\n        }\n      }\n\n      if (maxTime) {\n        const [maxHours, maxMinutes, maxSeconds] = maxTime.split(':').map(Number);\n\n        if (\n          hours > maxHours ||\n          (hours === maxHours && minutes > maxMinutes) ||\n          (withSeconds && hours === maxHours && minutes === maxMinutes && seconds > maxSeconds)\n        ) {\n          return 1;\n        }\n      }\n    }\n\n    return 0;\n  };\n\n  const onTimeBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    props.onBlur?.(event);\n    if (minTime !== undefined || maxTime !== undefined) {\n      const val = event.currentTarget.value;\n\n      if (val) {\n        const check = checkIfTimeLimitExceeded(val);\n        if (check === 1) {\n          event.currentTarget.value = maxTime!;\n          props.onChange?.(event);\n        } else if (check === -1) {\n          event.currentTarget.value = minTime!;\n          props.onChange?.(event);\n        }\n      }\n    }\n  };\n\n  return (\n    <InputBase\n      classNames={{ ...resolvedClassNames, input: cx(classes.input, resolvedClassNames?.input) }}\n      styles={resolvedStyles}\n      unstyled={unstyled}\n      ref={ref}\n      value={value}\n      step={step ?? (withSeconds ? 1 : 60)}\n      {...others}\n      onChange={onChange}\n      onBlur={onTimeBlur}\n      type=\"time\"\n      __staticSelector=\"TimeInput\"\n    />\n  );\n});\n\nTimeInput.classes = InputBase.classes;\nTimeInput.displayName = '@mantine/dates/TimeInput';\n"],"mappings":";;;;;;AAoCA,MAAMA,YAAA,GAAwC,CAAC;AAExC,MAAMC,SAAY,GAAAC,OAAA,CAA0B,CAACC,MAAA,EAAQC,GAAQ;EAClE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,WAAa,EAAAN,YAAA,EAAcG,MAAM;EAClD;IACJI,UAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,WAAA;IACAC,OAAA;IACAC,OAAA;IACAC,KAAA;IACAC,QAAA;IACAC,IAAA;IACA,GAAGC;EAAA,CACD,GAAAZ,KAAA;EAEJ,MAAM;IAAEa,kBAAA;IAAoBC;EAAe,IAAIC,oBAAuC;IACpFb,UAAA;IACAC,MAAA;IACAH;EAAA,CACD;EAQK,MAAAgB,wBAAA,GAA4BC,GAAgB;IAC5C,IAAAV,OAAA,KAAY,KAAa,KAAAC,OAAA,KAAY,KAAW;MAC5C,OAACU,KAAO,EAAAC,OAAA,EAASC,OAAO,IAAIH,GAAA,CAAII,KAAM,IAAG,CAAE,CAAAC,GAAA,CAAIC,MAAM;MAE3D,IAAIhB,OAAS;QACL,OAACiB,QAAU,EAAAC,UAAA,EAAYC,UAAU,IAAInB,OAAA,CAAQc,KAAM,IAAG,CAAE,CAAAC,GAAA,CAAIC,MAAM;QAExE,IACEL,KAAQ,GAAAM,QAAA,IACPN,KAAU,KAAAM,QAAA,IAAYL,OAAU,GAAAM,UAAA,IAChCnB,WAAe,IAAAY,KAAA,KAAUM,QAAY,IAAAL,OAAA,KAAYM,UAAc,IAAAL,OAAA,GAAUM,UAC1E;UACO;QAAA;MACT;MAGF,IAAIlB,OAAS;QACL,OAACmB,QAAU,EAAAC,UAAA,EAAYC,UAAU,IAAIrB,OAAA,CAAQa,KAAM,IAAG,CAAE,CAAAC,GAAA,CAAIC,MAAM;QAExE,IACEL,KAAQ,GAAAS,QAAA,IACPT,KAAU,KAAAS,QAAA,IAAYR,OAAU,GAAAS,UAAA,IAChCtB,WAAe,IAAAY,KAAA,KAAUS,QAAY,IAAAR,OAAA,KAAYS,UAAc,IAAAR,OAAA,GAAUS,UAC1E;UACO;QAAA;MACT;IACF;IAGK;EACT;EAEM,MAAAC,UAAA,GAAcC,KAA8C;IAChE/B,KAAA,CAAMgC,MAAA,GAASD,KAAK;IAChB,IAAAxB,OAAA,KAAY,KAAa,KAAAC,OAAA,KAAY,KAAW;MAC5C,MAAAS,GAAA,GAAMc,KAAA,CAAME,aAAc,CAAAxB,KAAA;MAEhC,IAAIQ,GAAK;QACD,MAAAiB,KAAA,GAAQlB,wBAAA,CAAyBC,GAAG;QAC1C,IAAIiB,KAAA,KAAU,CAAG;UACfH,KAAA,CAAME,aAAA,CAAcxB,KAAQ,GAAAD,OAAA;UAC5BR,KAAA,CAAMU,QAAA,GAAWqB,KAAK;QAAA,CACxB,UAAWG,KAAA,KAAU,CAAI;UACvBH,KAAA,CAAME,aAAA,CAAcxB,KAAQ,GAAAF,OAAA;UAC5BP,KAAA,CAAMU,QAAA,GAAWqB,KAAK;QAAA;MACxB;IACF;EAEJ;EAGE,sBAAAI,GAAA,CAACC,SAAA;IACClC,UAAA,EAAY;MAAE,GAAGW,kBAAoB;MAAAwB,KAAA,EAAOC,EAAA,CAAGC,OAAQ,CAAAF,KAAA,EAAOxB,kBAAoB,EAAAwB,KAAK;IAAE;IACzFlC,MAAQ,EAAAW,cAAA;IACRV,QAAA;IACAL,GAAA;IACAU,KAAA;IACAE,IAAA,EAAMA,IAAS,KAAAL,WAAA,GAAc,CAAI;IAChC,GAAGM,MAAA;IACJF,QAAA;IACAsB,MAAQ,EAAAF,UAAA;IACRU,IAAK;IACLC,gBAAiB;EAAA,CACnB;AAEJ,CAAC;AAED7C,SAAA,CAAU2C,OAAA,GAAUH,SAAU,CAAAG,OAAA;AAC9B3C,SAAA,CAAU8C,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}