{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { ScrollArea, SimpleGrid } from '@mantine/core';\nimport { useTimePickerContext } from '../TimePicker.context.mjs';\nimport { isSameTime } from '../utils/is-same-time/is-same-time.mjs';\nimport { TimePresetControl } from './TimePresetControl.mjs';\nimport { TimePresetGroup } from './TimePresetGroup.mjs';\nfunction TimePresets({\n  presets,\n  format,\n  amPmLabels,\n  withSeconds,\n  value,\n  onChange\n}) {\n  const ctx = useTimePickerContext();\n  if (presets.length === 0) {\n    return null;\n  }\n  if (typeof presets[0] === \"string\") {\n    const items = presets.map(item => /* @__PURE__ */jsx(TimePresetControl, {\n      value: item,\n      format,\n      amPmLabels,\n      withSeconds,\n      active: isSameTime({\n        time: item,\n        compare: value,\n        withSeconds\n      }),\n      onChange\n    }, item));\n    return /* @__PURE__ */jsx(ScrollArea.Autosize, {\n      mah: ctx.maxDropdownContentHeight,\n      type: \"never\",\n      ...ctx.getStyles(\"scrollarea\"),\n      ...ctx.scrollAreaProps,\n      children: /* @__PURE__ */jsx(\"div\", {\n        ...ctx.getStyles(\"presetsRoot\"),\n        children: /* @__PURE__ */jsx(SimpleGrid, {\n          cols: withSeconds ? 2 : 3,\n          spacing: 4,\n          children: items\n        })\n      })\n    });\n  }\n  const groups = presets.map((group, index) => /* @__PURE__ */jsx(TimePresetGroup, {\n    data: group,\n    value,\n    format,\n    amPmLabels,\n    withSeconds,\n    onChange\n  }, index));\n  return /* @__PURE__ */jsx(ScrollArea.Autosize, {\n    mah: ctx.maxDropdownContentHeight,\n    type: \"never\",\n    ...ctx.getStyles(\"scrollarea\"),\n    ...ctx.scrollAreaProps,\n    children: /* @__PURE__ */jsx(\"div\", {\n      ...ctx.getStyles(\"presetsRoot\"),\n      children: groups\n    })\n  });\n}\nTimePresets.displayName = \"@mantine/dates/TimePresets\";\nexport { TimePresets };","map":{"version":3,"names":["TimePresets","presets","format","amPmLabels","withSeconds","value","onChange","ctx","useTimePickerContext","length","items","map","item","jsx","TimePresetControl","active","isSameTime","time","compare","ScrollArea","Autosize","mah","maxDropdownContentHeight","type","getStyles","scrollAreaProps","children","SimpleGrid","cols","spacing","groups","group","index","TimePresetGroup","data","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/components/TimePicker/TimePresets/TimePresets.tsx"],"sourcesContent":["import { ScrollArea, SimpleGrid } from '@mantine/core';\nimport { useTimePickerContext } from '../TimePicker.context';\nimport {\n  TimePickerAmPmLabels,\n  TimePickerFormat,\n  TimePickerPresetGroup,\n  TimePickerPresets,\n} from '../TimePicker.types';\nimport { isSameTime } from '../utils/is-same-time/is-same-time';\nimport { TimePresetControl } from './TimePresetControl';\nimport { TimePresetGroup } from './TimePresetGroup';\n\ninterface TimePresetsProps {\n  presets: TimePickerPresets;\n  format: TimePickerFormat;\n  amPmLabels: TimePickerAmPmLabels;\n  value: string;\n  withSeconds: boolean;\n  onChange: (value: string) => void;\n}\n\nexport function TimePresets({\n  presets,\n  format,\n  amPmLabels,\n  withSeconds,\n  value,\n  onChange,\n}: TimePresetsProps) {\n  const ctx = useTimePickerContext();\n\n  if (presets.length === 0) {\n    return null;\n  }\n\n  if (typeof presets[0] === 'string') {\n    const items = (presets as string[]).map((item) => (\n      <TimePresetControl\n        key={item}\n        value={item}\n        format={format}\n        amPmLabels={amPmLabels}\n        withSeconds={withSeconds}\n        active={isSameTime({ time: item, compare: value, withSeconds })}\n        onChange={onChange}\n      />\n    ));\n\n    return (\n      <ScrollArea.Autosize\n        mah={ctx.maxDropdownContentHeight}\n        type=\"never\"\n        {...ctx.getStyles('scrollarea')}\n        {...ctx.scrollAreaProps}\n      >\n        <div {...ctx.getStyles('presetsRoot')}>\n          <SimpleGrid cols={withSeconds ? 2 : 3} spacing={4}>\n            {items}\n          </SimpleGrid>\n        </div>\n      </ScrollArea.Autosize>\n    );\n  }\n\n  const groups = (presets as TimePickerPresetGroup[]).map((group, index) => (\n    <TimePresetGroup\n      key={index}\n      data={group}\n      value={value}\n      format={format}\n      amPmLabels={amPmLabels}\n      withSeconds={withSeconds}\n      onChange={onChange}\n    />\n  ));\n\n  return (\n    <ScrollArea.Autosize\n      mah={ctx.maxDropdownContentHeight}\n      type=\"never\"\n      {...ctx.getStyles('scrollarea')}\n      {...ctx.scrollAreaProps}\n    >\n      <div {...ctx.getStyles('presetsRoot')}>{groups}</div>\n    </ScrollArea.Autosize>\n  );\n}\n\nTimePresets.displayName = '@mantine/dates/TimePresets';\n"],"mappings":";;;;;;;;AAqBO,SAASA,WAAYA,CAAA;EAC1BC,OAAA;EACAC,MAAA;EACAC,UAAA;EACAC,WAAA;EACAC,KAAA;EACAC;AACF,CAAqB;EACnB,MAAMC,GAAA,GAAMC,oBAAqB;EAE7B,IAAAP,OAAA,CAAQQ,MAAA,KAAW,CAAG;IACjB;EAAA;EAGT,IAAI,OAAOR,OAAA,CAAQ,CAAC,MAAM,QAAU;IAClC,MAAMS,KAAS,GAAAT,OAAA,CAAqBU,GAAI,CAACC,IACvC,mBAAAC,GAAA,CAACC,iBAAA;MAECT,KAAO,EAAAO,IAAA;MACPV,MAAA;MACAC,UAAA;MACAC,WAAA;MACAW,MAAA,EAAQC,UAAA,CAAW;QAAEC,IAAA,EAAML,IAAA;QAAMM,OAAS,EAAAb,KAAA;QAAOD;MAAA,CAAa;MAC9DE;IAAA,GANKM,IAAA,CAQR;IAGC,sBAAAC,GAAA,CAACM,UAAW,CAAAC,QAAA,EAAX;MACCC,GAAA,EAAKd,GAAI,CAAAe,wBAAA;MACTC,IAAK;MACJ,GAAGhB,GAAI,CAAAiB,SAAA,CAAU,YAAY;MAC7B,GAAGjB,GAAI,CAAAkB,eAAA;MAERC,QAAA,iBAAAb,GAAA,CAAC,KAAK;QAAA,GAAGN,GAAI,CAAAiB,SAAA,CAAU,aAAa,CAClC;QAAAE,QAAA,iBAAAb,GAAA,CAACc,UAAW;UAAAC,IAAA,EAAMxB,WAAA,GAAc,CAAI;UAAGyB,OAAS;UAC7CH,QAAA,EAAAhB;QAAA,CACH;MACF;IAAA,CACF;EAAA;EAIJ,MAAMoB,MAAU,GAAA7B,OAAA,CAAoCU,GAAI,EAACoB,KAAA,EAAOC,KAC9D,oBAAAnB,GAAA,CAACoB,eAAA;IAECC,IAAM,EAAAH,KAAA;IACN1B,KAAA;IACAH,MAAA;IACAC,UAAA;IACAC,WAAA;IACAE;EAAA,GANK0B,KAAA,CAQR;EAGC,sBAAAnB,GAAA,CAACM,UAAW,CAAAC,QAAA,EAAX;IACCC,GAAA,EAAKd,GAAI,CAAAe,wBAAA;IACTC,IAAK;IACJ,GAAGhB,GAAI,CAAAiB,SAAA,CAAU,YAAY;IAC7B,GAAGjB,GAAI,CAAAkB,eAAA;IAERC,QAAA,iBAAAb,GAAA,CAAC,KAAK;MAAA,GAAGN,GAAA,CAAIiB,SAAU,cAAa;MAAIE,QAAO,EAAAI;IAAA;EAAA,CACjD;AAEJ;AAEA9B,WAAA,CAAYmC,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}