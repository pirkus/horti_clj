{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport dayjs from 'dayjs';\nimport { useRef } from 'react';\nimport { factory, useProps } from '@mantine/core';\nimport { handleControlKeyDown } from '../../utils/handle-control-key-down/handle-control-key-down.mjs';\nimport { LevelsGroup } from '../LevelsGroup/LevelsGroup.mjs';\nimport { YearLevel } from '../YearLevel/YearLevel.mjs';\nconst defaultProps = {\n  numberOfColumns: 1\n};\nconst YearLevelGroup = factory((_props, ref) => {\n  const props = useProps(\"YearLevelGroup\", defaultProps, _props);\n  const {\n    // YearLevel settings\n    year,\n    locale,\n    minDate,\n    maxDate,\n    monthsListFormat,\n    getMonthControlProps,\n    __onControlClick,\n    __onControlMouseEnter,\n    withCellSpacing,\n    // CalendarHeader settings\n    __preventFocus,\n    nextIcon,\n    previousIcon,\n    nextLabel,\n    previousLabel,\n    onNext,\n    onPrevious,\n    onLevelClick,\n    nextDisabled,\n    previousDisabled,\n    hasNextLevel,\n    // Other settings\n    classNames,\n    styles,\n    unstyled,\n    __staticSelector,\n    __stopPropagation,\n    numberOfColumns,\n    levelControlAriaLabel,\n    yearLabelFormat,\n    size,\n    vars,\n    ...others\n  } = props;\n  const controlsRef = useRef([]);\n  const years = Array(numberOfColumns).fill(0).map((_, yearIndex) => {\n    const currentYear = dayjs(year).add(yearIndex, \"years\").format(\"YYYY-MM-DD\");\n    return /* @__PURE__ */jsx(YearLevel, {\n      size,\n      monthsListFormat,\n      year: currentYear,\n      withNext: yearIndex === numberOfColumns - 1,\n      withPrevious: yearIndex === 0,\n      yearLabelFormat,\n      __stopPropagation,\n      __onControlClick,\n      __onControlMouseEnter,\n      __onControlKeyDown: (event, payload) => handleControlKeyDown({\n        levelIndex: yearIndex,\n        rowIndex: payload.rowIndex,\n        cellIndex: payload.cellIndex,\n        event,\n        controlsRef\n      }),\n      __getControlRef: (rowIndex, cellIndex, node) => {\n        if (!Array.isArray(controlsRef.current[yearIndex])) {\n          controlsRef.current[yearIndex] = [];\n        }\n        if (!Array.isArray(controlsRef.current[yearIndex][rowIndex])) {\n          controlsRef.current[yearIndex][rowIndex] = [];\n        }\n        controlsRef.current[yearIndex][rowIndex][cellIndex] = node;\n      },\n      levelControlAriaLabel: typeof levelControlAriaLabel === \"function\" ? levelControlAriaLabel(currentYear) : levelControlAriaLabel,\n      locale,\n      minDate,\n      maxDate,\n      __preventFocus,\n      nextIcon,\n      previousIcon,\n      nextLabel,\n      previousLabel,\n      onNext,\n      onPrevious,\n      onLevelClick,\n      nextDisabled,\n      previousDisabled,\n      hasNextLevel,\n      getMonthControlProps,\n      classNames,\n      styles,\n      unstyled,\n      __staticSelector: __staticSelector || \"YearLevelGroup\",\n      withCellSpacing\n    }, yearIndex);\n  });\n  return /* @__PURE__ */jsx(LevelsGroup, {\n    classNames,\n    styles,\n    __staticSelector: __staticSelector || \"YearLevelGroup\",\n    ref,\n    size,\n    unstyled,\n    ...others,\n    children: years\n  });\n});\nYearLevelGroup.classes = {\n  ...YearLevel.classes,\n  ...LevelsGroup.classes\n};\nYearLevelGroup.displayName = \"@mantine/dates/YearLevelGroup\";\nexport { YearLevelGroup };","map":{"version":3,"names":["defaultProps","numberOfColumns","YearLevelGroup","factory","_props","ref","props","useProps","year","locale","minDate","maxDate","monthsListFormat","getMonthControlProps","__onControlClick","__onControlMouseEnter","withCellSpacing","__preventFocus","nextIcon","previousIcon","nextLabel","previousLabel","onNext","onPrevious","onLevelClick","nextDisabled","previousDisabled","hasNextLevel","classNames","styles","unstyled","__staticSelector","__stopPropagation","levelControlAriaLabel","yearLabelFormat","size","vars","others","controlsRef","useRef","years","Array","fill","map","_","yearIndex","currentYear","dayjs","add","format","jsx","YearLevel","withNext","withPrevious","__onControlKeyDown","event","payload","handleControlKeyDown","levelIndex","rowIndex","cellIndex","__getControlRef","node","isArray","current","LevelsGroup","children","classes","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/components/YearLevelGroup/YearLevelGroup.tsx"],"sourcesContent":["import dayjs from 'dayjs';\nimport { useRef } from 'react';\nimport { BoxProps, ElementProps, factory, Factory, StylesApiProps, useProps } from '@mantine/core';\nimport { DateStringValue } from '../../types';\nimport { handleControlKeyDown } from '../../utils';\nimport { LevelsGroup, LevelsGroupStylesNames } from '../LevelsGroup';\nimport { YearLevel, YearLevelSettings, YearLevelStylesNames } from '../YearLevel';\n\nexport type YearLevelGroupStylesNames = YearLevelStylesNames | LevelsGroupStylesNames;\n\nexport interface YearLevelGroupProps\n  extends BoxProps,\n    Omit<YearLevelSettings, 'withPrevious' | 'withNext' | '__onControlKeyDown' | '__getControlRef'>,\n    Omit<StylesApiProps<YearLevelGroupFactory>, 'classNames' | 'styles'>,\n    ElementProps<'div'> {\n  classNames?: Partial<Record<string, string>>;\n  styles?: Partial<Record<string, React.CSSProperties>>;\n  __staticSelector?: string;\n\n  /** Number of columns displayed next to each other */\n  numberOfColumns?: number;\n\n  /** Displayed year */\n  year: DateStringValue;\n\n  /** Function that returns level control `aria-label` */\n  levelControlAriaLabel?: ((year: DateStringValue) => string) | string;\n}\n\nexport type YearLevelGroupFactory = Factory<{\n  props: YearLevelGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: YearLevelGroupStylesNames;\n}>;\n\nconst defaultProps: Partial<YearLevelGroupProps> = {\n  numberOfColumns: 1,\n};\n\nexport const YearLevelGroup = factory<YearLevelGroupFactory>((_props, ref) => {\n  const props = useProps('YearLevelGroup', defaultProps, _props);\n  const {\n    // YearLevel settings\n    year,\n    locale,\n    minDate,\n    maxDate,\n    monthsListFormat,\n    getMonthControlProps,\n    __onControlClick,\n    __onControlMouseEnter,\n    withCellSpacing,\n\n    // CalendarHeader settings\n    __preventFocus,\n    nextIcon,\n    previousIcon,\n    nextLabel,\n    previousLabel,\n    onNext,\n    onPrevious,\n    onLevelClick,\n    nextDisabled,\n    previousDisabled,\n    hasNextLevel,\n\n    // Other settings\n    classNames,\n    styles,\n    unstyled,\n    __staticSelector,\n    __stopPropagation,\n    numberOfColumns,\n    levelControlAriaLabel,\n    yearLabelFormat,\n    size,\n    vars,\n    ...others\n  } = props;\n\n  const controlsRef = useRef<HTMLButtonElement[][][]>([]);\n\n  const years = Array(numberOfColumns)\n    .fill(0)\n    .map((_, yearIndex) => {\n      const currentYear = dayjs(year).add(yearIndex, 'years').format('YYYY-MM-DD');\n\n      return (\n        <YearLevel\n          key={yearIndex}\n          size={size}\n          monthsListFormat={monthsListFormat}\n          year={currentYear}\n          withNext={yearIndex === numberOfColumns! - 1}\n          withPrevious={yearIndex === 0}\n          yearLabelFormat={yearLabelFormat}\n          __stopPropagation={__stopPropagation}\n          __onControlClick={__onControlClick}\n          __onControlMouseEnter={__onControlMouseEnter}\n          __onControlKeyDown={(event, payload) =>\n            handleControlKeyDown({\n              levelIndex: yearIndex,\n              rowIndex: payload.rowIndex,\n              cellIndex: payload.cellIndex,\n              event,\n              controlsRef,\n            })\n          }\n          __getControlRef={(rowIndex, cellIndex, node) => {\n            if (!Array.isArray(controlsRef.current[yearIndex])) {\n              controlsRef.current[yearIndex] = [];\n            }\n\n            if (!Array.isArray(controlsRef.current[yearIndex][rowIndex])) {\n              controlsRef.current[yearIndex][rowIndex] = [];\n            }\n\n            controlsRef.current[yearIndex][rowIndex][cellIndex] = node;\n          }}\n          levelControlAriaLabel={\n            typeof levelControlAriaLabel === 'function'\n              ? levelControlAriaLabel(currentYear)\n              : levelControlAriaLabel\n          }\n          locale={locale}\n          minDate={minDate}\n          maxDate={maxDate}\n          __preventFocus={__preventFocus}\n          nextIcon={nextIcon}\n          previousIcon={previousIcon}\n          nextLabel={nextLabel}\n          previousLabel={previousLabel}\n          onNext={onNext}\n          onPrevious={onPrevious}\n          onLevelClick={onLevelClick}\n          nextDisabled={nextDisabled}\n          previousDisabled={previousDisabled}\n          hasNextLevel={hasNextLevel}\n          getMonthControlProps={getMonthControlProps}\n          classNames={classNames}\n          styles={styles}\n          unstyled={unstyled}\n          __staticSelector={__staticSelector || 'YearLevelGroup'}\n          withCellSpacing={withCellSpacing}\n        />\n      );\n    });\n\n  return (\n    <LevelsGroup\n      classNames={classNames}\n      styles={styles}\n      __staticSelector={__staticSelector || 'YearLevelGroup'}\n      ref={ref}\n      size={size}\n      unstyled={unstyled}\n      {...others}\n    >\n      {years}\n    </LevelsGroup>\n  );\n});\n\nYearLevelGroup.classes = { ...YearLevel.classes, ...LevelsGroup.classes };\nYearLevelGroup.displayName = '@mantine/dates/YearLevelGroup';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}