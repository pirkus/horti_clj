{"ast":null,"code":"'use client';\n\nfunction getNextIndex({\n  direction,\n  levelIndex,\n  rowIndex,\n  cellIndex,\n  size\n}) {\n  switch (direction) {\n    case \"up\":\n      if (levelIndex === 0 && rowIndex === 0) {\n        return null;\n      }\n      if (rowIndex === 0) {\n        return {\n          levelIndex: levelIndex - 1,\n          rowIndex: cellIndex <= size[levelIndex - 1][size[levelIndex - 1].length - 1] - 1 ? size[levelIndex - 1].length - 1 : size[levelIndex - 1].length - 2,\n          cellIndex\n        };\n      }\n      return {\n        levelIndex,\n        rowIndex: rowIndex - 1,\n        cellIndex\n      };\n    case \"down\":\n      if (rowIndex === size[levelIndex].length - 1) {\n        return {\n          levelIndex: levelIndex + 1,\n          rowIndex: 0,\n          cellIndex\n        };\n      }\n      if (rowIndex === size[levelIndex].length - 2 && cellIndex >= size[levelIndex][size[levelIndex].length - 1]) {\n        return {\n          levelIndex: levelIndex + 1,\n          rowIndex: 0,\n          cellIndex\n        };\n      }\n      return {\n        levelIndex,\n        rowIndex: rowIndex + 1,\n        cellIndex\n      };\n    case \"left\":\n      if (levelIndex === 0 && rowIndex === 0 && cellIndex === 0) {\n        return null;\n      }\n      if (rowIndex === 0 && cellIndex === 0) {\n        return {\n          levelIndex: levelIndex - 1,\n          rowIndex: size[levelIndex - 1].length - 1,\n          cellIndex: size[levelIndex - 1][size[levelIndex - 1].length - 1] - 1\n        };\n      }\n      if (cellIndex === 0) {\n        return {\n          levelIndex,\n          rowIndex: rowIndex - 1,\n          cellIndex: size[levelIndex][rowIndex - 1] - 1\n        };\n      }\n      return {\n        levelIndex,\n        rowIndex,\n        cellIndex: cellIndex - 1\n      };\n    case \"right\":\n      if (rowIndex === size[levelIndex].length - 1 && cellIndex === size[levelIndex][rowIndex] - 1) {\n        return {\n          levelIndex: levelIndex + 1,\n          rowIndex: 0,\n          cellIndex: 0\n        };\n      }\n      if (cellIndex === size[levelIndex][rowIndex] - 1) {\n        return {\n          levelIndex,\n          rowIndex: rowIndex + 1,\n          cellIndex: 0\n        };\n      }\n      return {\n        levelIndex,\n        rowIndex,\n        cellIndex: cellIndex + 1\n      };\n    default:\n      return {\n        levelIndex,\n        rowIndex,\n        cellIndex\n      };\n  }\n}\nfunction focusOnNextFocusableControl({\n  controlsRef,\n  direction,\n  levelIndex,\n  rowIndex,\n  cellIndex,\n  size\n}) {\n  const nextIndex = getNextIndex({\n    direction,\n    size,\n    rowIndex,\n    cellIndex,\n    levelIndex\n  });\n  if (!nextIndex) {\n    return;\n  }\n  const controlToFocus = controlsRef.current?.[nextIndex.levelIndex]?.[nextIndex.rowIndex]?.[nextIndex.cellIndex];\n  if (!controlToFocus) {\n    return;\n  }\n  if (controlToFocus.disabled || controlToFocus.getAttribute(\"data-hidden\") || controlToFocus.getAttribute(\"data-outside\")) {\n    focusOnNextFocusableControl({\n      controlsRef,\n      direction,\n      levelIndex: nextIndex.levelIndex,\n      cellIndex: nextIndex.cellIndex,\n      rowIndex: nextIndex.rowIndex,\n      size\n    });\n  } else {\n    controlToFocus.focus();\n  }\n}\nfunction getDirection(key) {\n  switch (key) {\n    case \"ArrowDown\":\n      return \"down\";\n    case \"ArrowUp\":\n      return \"up\";\n    case \"ArrowRight\":\n      return \"right\";\n    case \"ArrowLeft\":\n      return \"left\";\n    default:\n      return null;\n  }\n}\nfunction getControlsSize(controlsRef) {\n  return controlsRef.current?.map(column => column.map(row => row.length));\n}\nfunction handleControlKeyDown({\n  controlsRef,\n  levelIndex,\n  rowIndex,\n  cellIndex,\n  event\n}) {\n  const direction = getDirection(event.key);\n  if (direction) {\n    event.preventDefault();\n    const size = getControlsSize(controlsRef);\n    focusOnNextFocusableControl({\n      controlsRef,\n      direction,\n      levelIndex,\n      rowIndex,\n      cellIndex,\n      size\n    });\n  }\n}\nexport { handleControlKeyDown };","map":{"version":3,"names":["getNextIndex","direction","levelIndex","rowIndex","cellIndex","size","length","focusOnNextFocusableControl","controlsRef","nextIndex","controlToFocus","current","disabled","getAttribute","focus","getDirection","key","getControlsSize","map","column","row","handleControlKeyDown","event","preventDefault"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/utils/handle-control-key-down/handle-control-key-down.ts"],"sourcesContent":["import { RefObject } from 'react';\n\ntype ControlsRef = RefObject<HTMLButtonElement[][][]>;\ntype Direction = 'up' | 'down' | 'left' | 'right';\n\ntype NextIndexInput = Omit<ShiftFocusInput, 'controlsRef'>;\n\nfunction getNextIndex({ direction, levelIndex, rowIndex, cellIndex, size }: NextIndexInput) {\n  switch (direction) {\n    case 'up':\n      if (levelIndex === 0 && rowIndex === 0) {\n        return null;\n      }\n      if (rowIndex === 0) {\n        return {\n          levelIndex: levelIndex - 1,\n          rowIndex:\n            cellIndex <= size[levelIndex - 1][size[levelIndex - 1].length - 1] - 1\n              ? size[levelIndex - 1].length - 1\n              : size[levelIndex - 1].length - 2,\n          cellIndex,\n        };\n      }\n      return {\n        levelIndex,\n        rowIndex: rowIndex - 1,\n        cellIndex,\n      };\n\n    case 'down':\n      if (rowIndex === size[levelIndex].length - 1) {\n        return {\n          levelIndex: levelIndex + 1,\n          rowIndex: 0,\n          cellIndex,\n        };\n      }\n      if (\n        rowIndex === size[levelIndex].length - 2 &&\n        cellIndex >= size[levelIndex][size[levelIndex].length - 1]\n      ) {\n        return {\n          levelIndex: levelIndex + 1,\n          rowIndex: 0,\n          cellIndex,\n        };\n      }\n      return {\n        levelIndex,\n        rowIndex: rowIndex + 1,\n        cellIndex,\n      };\n\n    case 'left':\n      if (levelIndex === 0 && rowIndex === 0 && cellIndex === 0) {\n        return null;\n      }\n      if (rowIndex === 0 && cellIndex === 0) {\n        return {\n          levelIndex: levelIndex - 1,\n          rowIndex: size[levelIndex - 1].length - 1,\n          cellIndex: size[levelIndex - 1][size[levelIndex - 1].length - 1] - 1,\n        };\n      }\n      if (cellIndex === 0) {\n        return {\n          levelIndex,\n          rowIndex: rowIndex - 1,\n          cellIndex: size[levelIndex][rowIndex - 1] - 1,\n        };\n      }\n      return {\n        levelIndex,\n        rowIndex,\n        cellIndex: cellIndex - 1,\n      };\n\n    case 'right':\n      if (\n        rowIndex === size[levelIndex].length - 1 &&\n        cellIndex === size[levelIndex][rowIndex] - 1\n      ) {\n        return {\n          levelIndex: levelIndex + 1,\n          rowIndex: 0,\n          cellIndex: 0,\n        };\n      }\n      if (cellIndex === size[levelIndex][rowIndex] - 1) {\n        return {\n          levelIndex,\n          rowIndex: rowIndex + 1,\n          cellIndex: 0,\n        };\n      }\n      return {\n        levelIndex,\n        rowIndex,\n        cellIndex: cellIndex + 1,\n      };\n\n    default:\n      return { levelIndex, rowIndex, cellIndex };\n  }\n}\n\ninterface ShiftFocusInput {\n  controlsRef: ControlsRef;\n  direction: Direction;\n  levelIndex: number;\n  rowIndex: number;\n  cellIndex: number;\n  size: number[][];\n}\n\nfunction focusOnNextFocusableControl({\n  controlsRef,\n  direction,\n  levelIndex,\n  rowIndex,\n  cellIndex,\n  size,\n}: ShiftFocusInput) {\n  const nextIndex = getNextIndex({ direction, size, rowIndex, cellIndex, levelIndex });\n\n  if (!nextIndex) {\n    return;\n  }\n\n  const controlToFocus =\n    controlsRef.current?.[nextIndex.levelIndex]?.[nextIndex.rowIndex]?.[nextIndex.cellIndex];\n\n  if (!controlToFocus) {\n    return;\n  }\n\n  if (\n    controlToFocus.disabled ||\n    controlToFocus.getAttribute('data-hidden') ||\n    controlToFocus.getAttribute('data-outside')\n  ) {\n    focusOnNextFocusableControl({\n      controlsRef,\n      direction,\n      levelIndex: nextIndex.levelIndex,\n      cellIndex: nextIndex.cellIndex,\n      rowIndex: nextIndex.rowIndex,\n      size,\n    });\n  } else {\n    controlToFocus.focus();\n  }\n}\n\nfunction getDirection(key: KeyboardEvent['key']): Direction {\n  switch (key) {\n    case 'ArrowDown':\n      return 'down';\n    case 'ArrowUp':\n      return 'up';\n    case 'ArrowRight':\n      return 'right';\n    case 'ArrowLeft':\n      return 'left';\n    default:\n      return null!;\n  }\n}\n\nfunction getControlsSize(controlsRef: ControlsRef) {\n  return controlsRef.current?.map((column) => column.map((row) => row.length));\n}\n\ninterface HandleControlKeyDownInput {\n  controlsRef: ControlsRef;\n  levelIndex: number;\n  rowIndex: number;\n  cellIndex: number;\n  event: React.KeyboardEvent<HTMLButtonElement>;\n}\n\nexport function handleControlKeyDown({\n  controlsRef,\n  levelIndex,\n  rowIndex,\n  cellIndex,\n  event,\n}: HandleControlKeyDownInput) {\n  const direction = getDirection(event.key);\n\n  if (direction) {\n    event.preventDefault();\n\n    const size = getControlsSize(controlsRef)!;\n\n    focusOnNextFocusableControl({\n      controlsRef,\n      direction,\n      levelIndex,\n      rowIndex,\n      cellIndex,\n      size,\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}