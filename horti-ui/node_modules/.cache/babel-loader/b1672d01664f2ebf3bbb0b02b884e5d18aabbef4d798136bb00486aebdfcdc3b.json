{"ast":null,"code":"'use client';\n\nimport { splitTimeString } from '../split-time-string/split-time-string.mjs';\nfunction isSameTime({\n  time,\n  compare,\n  withSeconds\n}) {\n  const timeParts = splitTimeString(time);\n  const compareParts = splitTimeString(compare);\n  if (withSeconds) {\n    return timeParts.hours === compareParts.hours && timeParts.minutes === compareParts.minutes && timeParts.seconds === compareParts.seconds;\n  }\n  return timeParts.hours === compareParts.hours && timeParts.minutes === compareParts.minutes;\n}\nexport { isSameTime };","map":{"version":3,"names":["isSameTime","time","compare","withSeconds","timeParts","splitTimeString","compareParts","hours","minutes","seconds"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/components/TimePicker/utils/is-same-time/is-same-time.ts"],"sourcesContent":["import { splitTimeString } from '../split-time-string/split-time-string';\n\ninterface IsSameTimeInput {\n  time: string;\n  compare: string;\n  withSeconds: boolean;\n}\n\nexport function isSameTime({ time, compare, withSeconds }: IsSameTimeInput) {\n  const timeParts = splitTimeString(time);\n  const compareParts = splitTimeString(compare);\n\n  if (withSeconds) {\n    return (\n      timeParts.hours === compareParts.hours &&\n      timeParts.minutes === compareParts.minutes &&\n      timeParts.seconds === compareParts.seconds\n    );\n  }\n\n  return timeParts.hours === compareParts.hours && timeParts.minutes === compareParts.minutes;\n}\n"],"mappings":";;;AAQO,SAASA,UAAWA,CAAA;EAAEC,IAAM;EAAAC,OAAA;EAASC;AAAA,CAAgC;EACpE,MAAAC,SAAA,GAAYC,eAAA,CAAgBJ,IAAI;EAChC,MAAAK,YAAA,GAAeD,eAAA,CAAgBH,OAAO;EAE5C,IAAIC,WAAa;IAEb,OAAAC,SAAA,CAAUG,KAAU,KAAAD,YAAA,CAAaC,KACjC,IAAAH,SAAA,CAAUI,OAAA,KAAYF,YAAa,CAAAE,OAAA,IACnCJ,SAAU,CAAAK,OAAA,KAAYH,YAAa,CAAAG,OAAA;EAAA;EAIvC,OAAOL,SAAA,CAAUG,KAAU,KAAAD,YAAA,CAAaC,KAAS,IAAAH,SAAA,CAAUI,OAAA,KAAYF,YAAa,CAAAE,OAAA;AACtF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}