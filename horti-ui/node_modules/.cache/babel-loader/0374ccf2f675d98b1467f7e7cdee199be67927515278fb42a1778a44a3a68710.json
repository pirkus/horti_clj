{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport dayjs from 'dayjs';\nimport { useRef } from 'react';\nimport { factory, useProps } from '@mantine/core';\nimport { handleControlKeyDown } from '../../utils/handle-control-key-down/handle-control-key-down.mjs';\nimport { LevelsGroup } from '../LevelsGroup/LevelsGroup.mjs';\nimport { MonthLevel } from '../MonthLevel/MonthLevel.mjs';\nconst defaultProps = {\n  numberOfColumns: 1\n};\nconst MonthLevelGroup = factory((_props, ref) => {\n  const props = useProps(\"MonthLevelGroup\", defaultProps, _props);\n  const {\n    // Month settings\n    month,\n    locale,\n    firstDayOfWeek,\n    weekdayFormat,\n    weekendDays,\n    getDayProps,\n    excludeDate,\n    minDate,\n    maxDate,\n    renderDay,\n    hideOutsideDates,\n    hideWeekdays,\n    getDayAriaLabel,\n    __onDayClick,\n    __onDayMouseEnter,\n    withCellSpacing,\n    highlightToday,\n    withWeekNumbers,\n    // CalendarHeader settings\n    __preventFocus,\n    nextIcon,\n    previousIcon,\n    nextLabel,\n    previousLabel,\n    onNext,\n    onPrevious,\n    onLevelClick,\n    nextDisabled,\n    previousDisabled,\n    hasNextLevel,\n    // Other settings\n    classNames,\n    styles,\n    unstyled,\n    numberOfColumns,\n    levelControlAriaLabel,\n    monthLabelFormat,\n    __staticSelector,\n    __stopPropagation,\n    size,\n    static: isStatic,\n    vars,\n    ...others\n  } = props;\n  const daysRefs = useRef([]);\n  const months = Array(numberOfColumns).fill(0).map((_, monthIndex) => {\n    const currentMonth = dayjs(month).add(monthIndex, \"months\").format(\"YYYY-MM-DD\");\n    return /* @__PURE__ */jsx(MonthLevel, {\n      month: currentMonth,\n      withNext: monthIndex === numberOfColumns - 1,\n      withPrevious: monthIndex === 0,\n      monthLabelFormat,\n      __stopPropagation,\n      __onDayClick,\n      __onDayMouseEnter,\n      __onDayKeyDown: (event, payload) => handleControlKeyDown({\n        levelIndex: monthIndex,\n        rowIndex: payload.rowIndex,\n        cellIndex: payload.cellIndex,\n        event,\n        controlsRef: daysRefs\n      }),\n      __getDayRef: (rowIndex, cellIndex, node) => {\n        if (!Array.isArray(daysRefs.current[monthIndex])) {\n          daysRefs.current[monthIndex] = [];\n        }\n        if (!Array.isArray(daysRefs.current[monthIndex][rowIndex])) {\n          daysRefs.current[monthIndex][rowIndex] = [];\n        }\n        daysRefs.current[monthIndex][rowIndex][cellIndex] = node;\n      },\n      levelControlAriaLabel: typeof levelControlAriaLabel === \"function\" ? levelControlAriaLabel(currentMonth) : levelControlAriaLabel,\n      locale,\n      firstDayOfWeek,\n      weekdayFormat,\n      weekendDays,\n      getDayProps,\n      excludeDate,\n      minDate,\n      maxDate,\n      renderDay,\n      hideOutsideDates,\n      hideWeekdays,\n      getDayAriaLabel,\n      __preventFocus,\n      nextIcon,\n      previousIcon,\n      nextLabel,\n      previousLabel,\n      onNext,\n      onPrevious,\n      onLevelClick,\n      nextDisabled,\n      previousDisabled,\n      hasNextLevel,\n      classNames,\n      styles,\n      unstyled,\n      __staticSelector: __staticSelector || \"MonthLevelGroup\",\n      size,\n      static: isStatic,\n      withCellSpacing,\n      highlightToday,\n      withWeekNumbers\n    }, monthIndex);\n  });\n  return /* @__PURE__ */jsx(LevelsGroup, {\n    classNames,\n    styles,\n    __staticSelector: __staticSelector || \"MonthLevelGroup\",\n    ref,\n    size,\n    ...others,\n    children: months\n  });\n});\nMonthLevelGroup.classes = {\n  ...LevelsGroup.classes,\n  ...MonthLevel.classes\n};\nMonthLevelGroup.displayName = \"@mantine/dates/MonthLevelGroup\";\nexport { MonthLevelGroup };","map":{"version":3,"names":["defaultProps","numberOfColumns","MonthLevelGroup","factory","_props","ref","props","useProps","month","locale","firstDayOfWeek","weekdayFormat","weekendDays","getDayProps","excludeDate","minDate","maxDate","renderDay","hideOutsideDates","hideWeekdays","getDayAriaLabel","__onDayClick","__onDayMouseEnter","withCellSpacing","highlightToday","withWeekNumbers","__preventFocus","nextIcon","previousIcon","nextLabel","previousLabel","onNext","onPrevious","onLevelClick","nextDisabled","previousDisabled","hasNextLevel","classNames","styles","unstyled","levelControlAriaLabel","monthLabelFormat","__staticSelector","__stopPropagation","size","static","isStatic","vars","others","daysRefs","useRef","months","Array","fill","map","_","monthIndex","currentMonth","dayjs","add","format","jsx","MonthLevel","withNext","withPrevious","__onDayKeyDown","event","payload","handleControlKeyDown","levelIndex","rowIndex","cellIndex","controlsRef","__getDayRef","node","isArray","current","LevelsGroup","children","classes","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/components/MonthLevelGroup/MonthLevelGroup.tsx"],"sourcesContent":["import dayjs from 'dayjs';\nimport { useRef } from 'react';\nimport { BoxProps, ElementProps, factory, Factory, StylesApiProps, useProps } from '@mantine/core';\nimport { DateStringValue } from '../../types';\nimport { handleControlKeyDown } from '../../utils';\nimport { LevelsGroup, LevelsGroupStylesNames } from '../LevelsGroup';\nimport { MonthLevel, MonthLevelSettings, MonthLevelStylesNames } from '../MonthLevel';\n\nexport type MonthLevelGroupStylesNames = MonthLevelStylesNames | LevelsGroupStylesNames;\n\nexport interface MonthLevelGroupProps\n  extends BoxProps,\n    Omit<MonthLevelSettings, 'withPrevious' | 'withNext' | '__onDayKeyDown' | '__getDayRef'>,\n    Omit<StylesApiProps<MonthLevelGroupFactory>, 'classNames' | 'styles'>,\n    ElementProps<'div'> {\n  classNames?: Partial<Record<string, string>>;\n  styles?: Partial<Record<string, React.CSSProperties>>;\n  __staticSelector?: string;\n\n  /** Number of columns to display next to each other */\n  numberOfColumns?: number;\n\n  /** Month to display */\n  month: DateStringValue;\n\n  /** Function that returns level control `aria-label` based on month date */\n  levelControlAriaLabel?: ((month: DateStringValue) => string) | string;\n\n  /** Passed as `isStatic` prop to `Month` component */\n  static?: boolean;\n}\n\nexport type MonthLevelGroupFactory = Factory<{\n  props: MonthLevelGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: MonthLevelGroupStylesNames;\n}>;\n\nconst defaultProps: Partial<MonthLevelGroupProps> = {\n  numberOfColumns: 1,\n};\n\nexport const MonthLevelGroup = factory<MonthLevelGroupFactory>((_props, ref) => {\n  const props = useProps('MonthLevelGroup', defaultProps, _props);\n  const {\n    // Month settings\n    month,\n    locale,\n    firstDayOfWeek,\n    weekdayFormat,\n    weekendDays,\n    getDayProps,\n    excludeDate,\n    minDate,\n    maxDate,\n    renderDay,\n    hideOutsideDates,\n    hideWeekdays,\n    getDayAriaLabel,\n    __onDayClick,\n    __onDayMouseEnter,\n    withCellSpacing,\n    highlightToday,\n    withWeekNumbers,\n\n    // CalendarHeader settings\n    __preventFocus,\n    nextIcon,\n    previousIcon,\n    nextLabel,\n    previousLabel,\n    onNext,\n    onPrevious,\n    onLevelClick,\n    nextDisabled,\n    previousDisabled,\n    hasNextLevel,\n\n    // Other settings\n    classNames,\n    styles,\n    unstyled,\n    numberOfColumns,\n    levelControlAriaLabel,\n    monthLabelFormat,\n    __staticSelector,\n    __stopPropagation,\n    size,\n    static: isStatic,\n    vars,\n    ...others\n  } = props;\n\n  const daysRefs = useRef<HTMLButtonElement[][][]>([]);\n\n  const months = Array(numberOfColumns)\n    .fill(0)\n    .map((_, monthIndex) => {\n      const currentMonth = dayjs(month).add(monthIndex, 'months').format('YYYY-MM-DD');\n\n      return (\n        <MonthLevel\n          key={monthIndex}\n          month={currentMonth}\n          withNext={monthIndex === numberOfColumns! - 1}\n          withPrevious={monthIndex === 0}\n          monthLabelFormat={monthLabelFormat}\n          __stopPropagation={__stopPropagation}\n          __onDayClick={__onDayClick}\n          __onDayMouseEnter={__onDayMouseEnter}\n          __onDayKeyDown={(event, payload) =>\n            handleControlKeyDown({\n              levelIndex: monthIndex,\n              rowIndex: payload.rowIndex,\n              cellIndex: payload.cellIndex,\n              event,\n              controlsRef: daysRefs,\n            })\n          }\n          __getDayRef={(rowIndex, cellIndex, node) => {\n            if (!Array.isArray(daysRefs.current[monthIndex])) {\n              daysRefs.current[monthIndex] = [];\n            }\n\n            if (!Array.isArray(daysRefs.current[monthIndex][rowIndex])) {\n              daysRefs.current[monthIndex][rowIndex] = [];\n            }\n\n            daysRefs.current[monthIndex][rowIndex][cellIndex] = node;\n          }}\n          levelControlAriaLabel={\n            typeof levelControlAriaLabel === 'function'\n              ? levelControlAriaLabel(currentMonth)\n              : levelControlAriaLabel\n          }\n          locale={locale}\n          firstDayOfWeek={firstDayOfWeek}\n          weekdayFormat={weekdayFormat}\n          weekendDays={weekendDays}\n          getDayProps={getDayProps}\n          excludeDate={excludeDate}\n          minDate={minDate}\n          maxDate={maxDate}\n          renderDay={renderDay}\n          hideOutsideDates={hideOutsideDates}\n          hideWeekdays={hideWeekdays}\n          getDayAriaLabel={getDayAriaLabel}\n          __preventFocus={__preventFocus}\n          nextIcon={nextIcon}\n          previousIcon={previousIcon}\n          nextLabel={nextLabel}\n          previousLabel={previousLabel}\n          onNext={onNext}\n          onPrevious={onPrevious}\n          onLevelClick={onLevelClick}\n          nextDisabled={nextDisabled}\n          previousDisabled={previousDisabled}\n          hasNextLevel={hasNextLevel}\n          classNames={classNames}\n          styles={styles}\n          unstyled={unstyled}\n          __staticSelector={__staticSelector || 'MonthLevelGroup'}\n          size={size}\n          static={isStatic}\n          withCellSpacing={withCellSpacing}\n          highlightToday={highlightToday}\n          withWeekNumbers={withWeekNumbers}\n        />\n      );\n    });\n\n  return (\n    <LevelsGroup\n      classNames={classNames}\n      styles={styles}\n      __staticSelector={__staticSelector || 'MonthLevelGroup'}\n      ref={ref}\n      size={size}\n      {...others}\n    >\n      {months}\n    </LevelsGroup>\n  );\n});\n\nMonthLevelGroup.classes = { ...LevelsGroup.classes, ...MonthLevel.classes };\nMonthLevelGroup.displayName = '@mantine/dates/MonthLevelGroup';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}