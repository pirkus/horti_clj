{"ast":null,"code":"'use client';\n\nimport { useRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport 'dayjs';\nimport { toDateTimeString, toDateString } from '../../utils/to-date-string/to-date-string.mjs';\nconst getEmptyValue = type => type === \"range\" ? [null, null] : type === \"multiple\" ? [] : null;\nconst convertDatesValue = (value, withTime) => {\n  const converter = withTime ? toDateTimeString : toDateString;\n  return Array.isArray(value) ? value.map(converter) : converter(value);\n};\nfunction useUncontrolledDates({\n  type,\n  value,\n  defaultValue,\n  onChange,\n  withTime = false\n}) {\n  const storedType = useRef(type);\n  const [_value, _setValue, controlled] = useUncontrolled({\n    value: convertDatesValue(value, withTime),\n    defaultValue: convertDatesValue(defaultValue, withTime),\n    finalValue: getEmptyValue(type),\n    onChange\n  });\n  let _finalValue = _value;\n  if (storedType.current !== type) {\n    storedType.current = type;\n    if (value === void 0) {\n      _finalValue = defaultValue !== void 0 ? defaultValue : getEmptyValue(type);\n      _setValue(_finalValue);\n    }\n  }\n  return [_finalValue, _setValue, controlled];\n}\nexport { convertDatesValue, useUncontrolledDates };","map":{"version":3,"names":["getEmptyValue","type","convertDatesValue","value","withTime","converter","toDateTimeString","toDateString","Array","isArray","map","useUncontrolledDates","defaultValue","onChange","storedType","useRef","_value","_setValue","controlled","useUncontrolled","finalValue","_finalValue","current"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/hooks/use-uncontrolled-dates/use-uncontrolled-dates.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { DatePickerType, DatePickerValue, DateStringValue } from '../../types';\nimport { toDateString, toDateTimeString } from '../../utils';\n\ninterface UseUncontrolledDates<Type extends DatePickerType = 'default'> {\n  type: Type;\n  value: DatePickerValue<Type> | undefined;\n  defaultValue: DatePickerValue<Type> | undefined;\n  onChange: ((value: DatePickerValue<Type, DateStringValue>) => void) | undefined;\n  withTime?: boolean;\n}\n\nconst getEmptyValue = <Type extends DatePickerType = 'default'>(type: Type) =>\n  type === 'range' ? [null, null] : type === 'multiple' ? [] : null;\n\nexport const convertDatesValue = (value: any, withTime: boolean) => {\n  const converter = withTime ? toDateTimeString : toDateString;\n  return Array.isArray(value) ? value.map(converter) : converter(value);\n};\n\nexport function useUncontrolledDates<Type extends DatePickerType = 'default'>({\n  type,\n  value,\n  defaultValue,\n  onChange,\n  withTime = false,\n}: UseUncontrolledDates<Type>) {\n  const storedType = useRef<Type>(type);\n  const [_value, _setValue, controlled] = useUncontrolled<any>({\n    value: convertDatesValue(value, withTime),\n    defaultValue: convertDatesValue(defaultValue, withTime),\n    finalValue: getEmptyValue(type),\n    onChange,\n  });\n\n  let _finalValue = _value;\n\n  if (storedType.current !== type) {\n    storedType.current = type;\n\n    if (value === undefined) {\n      _finalValue = defaultValue !== undefined ? defaultValue : getEmptyValue(type);\n      _setValue(_finalValue);\n    }\n  }\n\n  return [_finalValue, _setValue, controlled];\n}\n"],"mappings":";;;;;;AAaA,MAAMA,aAAgB,GAA0CC,IAC9D,IAAAA,IAAA,KAAS,OAAU,IAAC,IAAM,MAAI,CAAI,GAAAA,IAAA,KAAS,UAAa,KAAK;AAElD,MAAAC,iBAAA,GAAoBA,CAACC,KAAA,EAAYC,QAAsB;EAC5D,MAAAC,SAAA,GAAYD,QAAA,GAAWE,gBAAmB,GAAAC,YAAA;EACzC,OAAAC,KAAA,CAAMC,OAAA,CAAQN,KAAK,IAAIA,KAAA,CAAMO,GAAI,CAAAL,SAAS,CAAI,GAAAA,SAAA,CAAUF,KAAK;AACtE;AAEO,SAASQ,oBAA8DA,CAAA;EAC5EV,IAAA;EACAE,KAAA;EACAS,YAAA;EACAC,QAAA;EACAT,QAAW;AACb,CAA+B;EACvB,MAAAU,UAAA,GAAaC,MAAA,CAAad,IAAI;EACpC,MAAM,CAACe,MAAA,EAAQC,SAAW,EAAAC,UAAU,IAAIC,eAAqB;IAC3DhB,KAAA,EAAOD,iBAAkB,CAAAC,KAAA,EAAOC,QAAQ;IACxCQ,YAAA,EAAcV,iBAAkB,CAAAU,YAAA,EAAcR,QAAQ;IACtDgB,UAAA,EAAYpB,aAAA,CAAcC,IAAI;IAC9BY;EAAA,CACD;EAED,IAAIQ,WAAc,GAAAL,MAAA;EAEd,IAAAF,UAAA,CAAWQ,OAAA,KAAYrB,IAAM;IAC/Ba,UAAA,CAAWQ,OAAU,GAAArB,IAAA;IAErB,IAAIE,KAAA,KAAU,KAAW;MACvBkB,WAAA,GAAcT,YAAiB,cAAYA,YAAe,GAAAZ,aAAA,CAAcC,IAAI;MAC5EgB,SAAA,CAAUI,WAAW;IAAA;EACvB;EAGK,QAACA,WAAa,EAAAJ,SAAA,EAAWC,UAAU;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}