{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useMenuContext } from '../Menu.context.mjs';\nfunction MenuSubTarget({\n  children,\n  refProp\n}) {\n  if (!isElement(children)) {\n    throw new Error(\"Menu.Sub.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  useMenuContext();\n  return /* @__PURE__ */jsx(Popover.Target, {\n    refProp,\n    popupType: \"menu\",\n    children\n  });\n}\nMenuSubTarget.displayName = \"@mantine/core/MenuSubTarget\";\nexport { MenuSubTarget };","map":{"version":3,"names":["MenuSubTarget","children","refProp","isElement","Error","useMenuContext","jsx","Popover","Target","popupType","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/core/src/components/Menu/MenuSubTarget/MenuSubTarget.tsx"],"sourcesContent":["import { isElement } from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useMenuContext } from '../Menu.context';\n\nexport interface MenuSubTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to get element ref */\n  refProp?: string;\n}\n\nexport function MenuSubTarget({ children, refProp }: MenuSubTargetProps) {\n  if (!isElement(children)) {\n    throw new Error(\n      'Menu.Sub.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  useMenuContext();\n\n  return (\n    <Popover.Target refProp={refProp} popupType=\"menu\">\n      {children}\n    </Popover.Target>\n  );\n}\n\nMenuSubTarget.displayName = '@mantine/core/MenuSubTarget';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAYO,SAASA,aAAcA,CAAA;EAAEC,QAAU;EAAAC;AAAA,CAA+B;EACnE,KAACC,SAAU,CAAAF,QAAQ,CAAG;IACxB,MAAM,IAAIG,KAAA,CACR,mKACF;EAAA;EAGaC,cAAA;EAEf,sBAAAC,GAAA,CACGC,OAAQ,CAAAC,MAAA,EAAR;IAAeN,OAAkB;IAAAO,SAAA,EAAU;IACzCR;EACH;AAEJ;AAEAD,aAAA,CAAcU,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}