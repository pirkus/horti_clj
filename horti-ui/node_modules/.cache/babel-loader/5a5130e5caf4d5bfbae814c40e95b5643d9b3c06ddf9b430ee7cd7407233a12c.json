{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useReducedMotion, useDidUpdate } from '@mantine/hooks';\nimport 'react/jsx-runtime';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nfunction useTransition({\n  duration,\n  exitDuration,\n  timingFunction,\n  mounted,\n  onEnter,\n  onExit,\n  onEntered,\n  onExited,\n  enterDelay,\n  exitDelay\n}) {\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const [transitionDuration, setTransitionDuration] = useState(reduceMotion ? 0 : duration);\n  const [transitionStatus, setStatus] = useState(mounted ? \"entered\" : \"exited\");\n  const transitionTimeoutRef = useRef(-1);\n  const delayTimeoutRef = useRef(-1);\n  const rafRef = useRef(-1);\n  function clearAllTimeouts() {\n    window.clearTimeout(transitionTimeoutRef.current);\n    window.clearTimeout(delayTimeoutRef.current);\n    cancelAnimationFrame(rafRef.current);\n  }\n  const handleStateChange = shouldMount => {\n    clearAllTimeouts();\n    const preHandler = shouldMount ? onEnter : onExit;\n    const handler = shouldMount ? onEntered : onExited;\n    const newTransitionDuration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;\n    setTransitionDuration(newTransitionDuration);\n    if (newTransitionDuration === 0) {\n      typeof preHandler === \"function\" && preHandler();\n      typeof handler === \"function\" && handler();\n      setStatus(shouldMount ? \"entered\" : \"exited\");\n    } else {\n      rafRef.current = requestAnimationFrame(() => {\n        ReactDOM.flushSync(() => {\n          setStatus(shouldMount ? \"pre-entering\" : \"pre-exiting\");\n        });\n        rafRef.current = requestAnimationFrame(() => {\n          typeof preHandler === \"function\" && preHandler();\n          setStatus(shouldMount ? \"entering\" : \"exiting\");\n          transitionTimeoutRef.current = window.setTimeout(() => {\n            typeof handler === \"function\" && handler();\n            setStatus(shouldMount ? \"entered\" : \"exited\");\n          }, newTransitionDuration);\n        });\n      });\n    }\n  };\n  const handleTransitionWithDelay = shouldMount => {\n    clearAllTimeouts();\n    const delay = shouldMount ? enterDelay : exitDelay;\n    if (typeof delay !== \"number\") {\n      handleStateChange(shouldMount);\n      return;\n    }\n    delayTimeoutRef.current = window.setTimeout(() => {\n      handleStateChange(shouldMount);\n    }, shouldMount ? enterDelay : exitDelay);\n  };\n  useDidUpdate(() => {\n    handleTransitionWithDelay(mounted);\n  }, [mounted]);\n  useEffect(() => () => {\n    clearAllTimeouts();\n  }, []);\n  return {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction: timingFunction || \"ease\"\n  };\n}\nexport { useTransition };","map":{"version":3,"names":["useTransition","duration","exitDuration","timingFunction","mounted","onEnter","onExit","onEntered","onExited","enterDelay","exitDelay","theme","useMantineTheme","shouldReduceMotion","useReducedMotion","reduceMotion","respectReducedMotion","transitionDuration","setTransitionDuration","useState","transitionStatus","setStatus","transitionTimeoutRef","useRef","delayTimeoutRef","rafRef","clearAllTimeouts","window","clearTimeout","current","cancelAnimationFrame","handleStateChange","shouldMount","preHandler","handler","newTransitionDuration","requestAnimationFrame","ReactDOM","flushSync","setTimeout","handleTransitionWithDelay","delay","useDidUpdate","useEffect","transitionTimingFunction"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/core/src/components/Transition/use-transition.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDidUpdate, useReducedMotion } from '@mantine/hooks';\nimport { useMantineTheme } from '../../core';\n\nexport type TransitionStatus =\n  | 'entered'\n  | 'exited'\n  | 'entering'\n  | 'exiting'\n  | 'pre-exiting'\n  | 'pre-entering';\n\ninterface UseTransition {\n  duration: number;\n  exitDuration: number;\n  timingFunction: string;\n  mounted: boolean;\n  onEnter?: () => void;\n  onExit?: () => void;\n  onEntered?: () => void;\n  onExited?: () => void;\n  enterDelay?: number;\n  exitDelay?: number;\n}\n\nexport function useTransition({\n  duration,\n  exitDuration,\n  timingFunction,\n  mounted,\n  onEnter,\n  onExit,\n  onEntered,\n  onExited,\n  enterDelay,\n  exitDelay,\n}: UseTransition) {\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const [transitionDuration, setTransitionDuration] = useState(reduceMotion ? 0 : duration);\n  const [transitionStatus, setStatus] = useState<TransitionStatus>(mounted ? 'entered' : 'exited');\n  const transitionTimeoutRef = useRef<number>(-1);\n  const delayTimeoutRef = useRef<number>(-1);\n  const rafRef = useRef(-1);\n\n  function clearAllTimeouts() {\n    window.clearTimeout(transitionTimeoutRef.current);\n    window.clearTimeout(delayTimeoutRef.current);\n    cancelAnimationFrame(rafRef.current);\n  }\n\n  const handleStateChange = (shouldMount: boolean) => {\n    clearAllTimeouts();\n    const preHandler = shouldMount ? onEnter : onExit;\n    const handler = shouldMount ? onEntered : onExited;\n    const newTransitionDuration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;\n    setTransitionDuration(newTransitionDuration);\n\n    if (newTransitionDuration === 0) {\n      typeof preHandler === 'function' && preHandler();\n      typeof handler === 'function' && handler();\n      setStatus(shouldMount ? 'entered' : 'exited');\n    } else {\n      rafRef.current = requestAnimationFrame(() => {\n        ReactDOM.flushSync(() => {\n          setStatus(shouldMount ? 'pre-entering' : 'pre-exiting');\n        });\n        rafRef.current = requestAnimationFrame(() => {\n          typeof preHandler === 'function' && preHandler();\n          setStatus(shouldMount ? 'entering' : 'exiting');\n          transitionTimeoutRef.current = window.setTimeout(() => {\n            typeof handler === 'function' && handler();\n            setStatus(shouldMount ? 'entered' : 'exited');\n          }, newTransitionDuration);\n        });\n      });\n    }\n  };\n\n  const handleTransitionWithDelay = (shouldMount: boolean) => {\n    clearAllTimeouts();\n    const delay = shouldMount ? enterDelay : exitDelay;\n    if (typeof delay !== 'number') {\n      handleStateChange(shouldMount);\n      return;\n    }\n    delayTimeoutRef.current = window.setTimeout(\n      () => {\n        handleStateChange(shouldMount);\n      },\n      shouldMount ? enterDelay : exitDelay\n    );\n  };\n\n  useDidUpdate(() => {\n    handleTransitionWithDelay(mounted);\n  }, [mounted]);\n\n  useEffect(\n    () => () => {\n      clearAllTimeouts();\n    },\n    []\n  );\n\n  return {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction: timingFunction || 'ease',\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;AA0BO,SAASA,aAAcA,CAAA;EAC5BC,QAAA;EACAC,YAAA;EACAC,cAAA;EACAC,OAAA;EACAC,OAAA;EACAC,MAAA;EACAC,SAAA;EACAC,QAAA;EACAC,UAAA;EACAC;AACF,CAAkB;EAChB,MAAMC,KAAA,GAAQC,eAAgB;EAC9B,MAAMC,kBAAA,GAAqBC,gBAAiB;EACtC,MAAAC,YAAA,GAAeJ,KAAM,CAAAK,oBAAA,GAAuBH,kBAAqB;EACvE,MAAM,CAACI,kBAAoB,EAAAC,qBAAqB,IAAIC,QAAS,CAAAJ,YAAA,GAAe,IAAId,QAAQ;EACxF,MAAM,CAACmB,gBAAkB,EAAAC,SAAS,IAAIF,QAA2B,CAAAf,OAAA,GAAU,YAAY,QAAQ;EACzF,MAAAkB,oBAAA,GAAuBC,MAAA,CAAe,CAAE;EACxC,MAAAC,eAAA,GAAkBD,MAAA,CAAe,CAAE;EACnC,MAAAE,MAAA,GAASF,MAAA,CAAO,CAAE;EAExB,SAASG,gBAAmBA,CAAA;IACnBC,MAAA,CAAAC,YAAA,CAAaN,oBAAA,CAAqBO,OAAO;IACzCF,MAAA,CAAAC,YAAA,CAAaJ,eAAA,CAAgBK,OAAO;IAC3CC,oBAAA,CAAqBL,MAAA,CAAOI,OAAO;EAAA;EAG/B,MAAAE,iBAAA,GAAqBC,WAAyB;IACjCN,gBAAA;IACX,MAAAO,UAAA,GAAaD,WAAA,GAAc3B,OAAU,GAAAC,MAAA;IACrC,MAAA4B,OAAA,GAAUF,WAAA,GAAczB,SAAY,GAAAC,QAAA;IAC1C,MAAM2B,qBAAwB,GAAApB,YAAA,GAAe,CAAI,GAAAiB,WAAA,GAAc/B,QAAW,GAAAC,YAAA;IAC1EgB,qBAAA,CAAsBiB,qBAAqB;IAE3C,IAAIA,qBAAA,KAA0B,CAAG;MACxB,OAAAF,UAAA,KAAe,cAAcA,UAAW;MACxC,OAAAC,OAAA,KAAY,cAAcA,OAAQ;MAC/Bb,SAAA,CAAAW,WAAA,GAAc,YAAY,QAAQ;IAAA,CACvC;MACEP,MAAA,CAAAI,OAAA,GAAUO,qBAAA,CAAsB,MAAM;QAC3CC,QAAA,CAASC,SAAA,CAAU,MAAM;UACbjB,SAAA,CAAAW,WAAA,GAAc,iBAAiB,aAAa;QAAA,CACvD;QACMP,MAAA,CAAAI,OAAA,GAAUO,qBAAA,CAAsB,MAAM;UACpC,OAAAH,UAAA,KAAe,cAAcA,UAAW;UACrCZ,SAAA,CAAAW,WAAA,GAAc,aAAa,SAAS;UACzBV,oBAAA,CAAAO,OAAA,GAAUF,MAAO,CAAAY,UAAA,CAAW,MAAM;YAC9C,OAAAL,OAAA,KAAY,cAAcA,OAAQ;YAC/Bb,SAAA,CAAAW,WAAA,GAAc,YAAY,QAAQ;UAAA,GAC3CG,qBAAqB;QAAA,CACzB;MAAA,CACF;IAAA;EAEL;EAEM,MAAAK,yBAAA,GAA6BR,WAAyB;IACzCN,gBAAA;IACX,MAAAe,KAAA,GAAQT,WAAA,GAAcvB,UAAa,GAAAC,SAAA;IACrC,WAAO+B,KAAA,KAAU,QAAU;MAC7BV,iBAAA,CAAkBC,WAAW;MAC7B;IAAA;IAEFR,eAAA,CAAgBK,OAAA,GAAUF,MAAO,CAAAY,UAAA,CAC/B,MAAM;MACJR,iBAAA,CAAkBC,WAAW;IAC/B,GACAA,WAAA,GAAcvB,UAAa,GAAAC,SAC7B;EACF;EAEAgC,YAAA,CAAa,MAAM;IACjBF,yBAAA,CAA0BpC,OAAO;EAAA,CACnC,EAAG,CAACA,OAAO,CAAC;EAEZuC,SAAA,CACE,MAAM,MAAM;IACOjB,gBAAA;EACnB,GACA,EACF;EAEO;IACLT,kBAAA;IACAG,gBAAA;IACAwB,wBAAA,EAA0BzC,cAAkB;EAC9C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}