{"ast":null,"code":"'use client';\n\nimport dayjs from 'dayjs';\nimport { useDisclosure } from '@mantine/hooks';\nimport '../../components/DatesProvider/DatesProvider.mjs';\nimport { useDatesContext } from '../../components/DatesProvider/use-dates-context.mjs';\nimport { getFormattedDate } from '../../utils/get-formatted-date/get-formatted-date.mjs';\nimport { useUncontrolledDates } from '../use-uncontrolled-dates/use-uncontrolled-dates.mjs';\nfunction useDatesInput({\n  type,\n  value,\n  defaultValue,\n  onChange,\n  locale,\n  format,\n  closeOnChange,\n  sortDates,\n  labelSeparator,\n  valueFormatter\n}) {\n  const ctx = useDatesContext();\n  const [dropdownOpened, dropdownHandlers] = useDisclosure(false);\n  const [_value, _setValue] = useUncontrolledDates({\n    type,\n    value,\n    defaultValue,\n    onChange\n  });\n  const formattedValue = getFormattedDate({\n    type,\n    date: _value,\n    locale: ctx.getLocale(locale),\n    format,\n    labelSeparator: ctx.getLabelSeparator(labelSeparator),\n    formatter: valueFormatter\n  });\n  const setValue = val => {\n    if (closeOnChange) {\n      if (type === \"default\") {\n        dropdownHandlers.close();\n      }\n      if (type === \"range\" && val[0] && val[1]) {\n        dropdownHandlers.close();\n      }\n    }\n    if (sortDates && type === \"multiple\") {\n      _setValue([...val].sort((a, b) => dayjs(a).isAfter(dayjs(b)) ? 1 : -1));\n    } else {\n      _setValue(val);\n    }\n  };\n  const onClear = () => setValue(type === \"range\" ? [null, null] : type === \"multiple\" ? [] : null);\n  const shouldClear = type === \"range\" ? !!_value[0] : type === \"multiple\" ? _value.length > 0 : _value !== null;\n  return {\n    _value,\n    setValue,\n    onClear,\n    shouldClear,\n    formattedValue,\n    dropdownOpened,\n    dropdownHandlers\n  };\n}\nexport { useDatesInput };","map":{"version":3,"names":["useDatesInput","type","value","defaultValue","onChange","locale","format","closeOnChange","sortDates","labelSeparator","valueFormatter","ctx","useDatesContext","dropdownOpened","dropdownHandlers","useDisclosure","_value","_setValue","useUncontrolledDates","formattedValue","getFormattedDate","date","getLocale","getLabelSeparator","formatter","setValue","val","close","sort","a","b","dayjs","isAfter","onClear","shouldClear","length"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/hooks/use-dates-input/use-dates-input.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport { useDisclosure } from '@mantine/hooks';\nimport { useDatesContext } from '../../components/DatesProvider';\nimport { DatePickerType, DatePickerValue } from '../../types';\nimport { DateFormatter, getFormattedDate } from '../../utils';\nimport { useUncontrolledDates } from '../use-uncontrolled-dates/use-uncontrolled-dates';\n\ninterface UseDatesInput<Type extends DatePickerType = 'default'> {\n  type: Type;\n  value: DatePickerValue<Type> | undefined;\n  defaultValue: DatePickerValue<Type> | undefined;\n  onChange: ((value: DatePickerValue<Type>) => void) | undefined;\n  locale: string | undefined;\n  format: string | undefined;\n  closeOnChange: boolean | undefined;\n  sortDates: boolean | undefined;\n  labelSeparator: string | undefined;\n  valueFormatter: DateFormatter | undefined;\n}\n\nexport function useDatesInput<Type extends DatePickerType = 'default'>({\n  type,\n  value,\n  defaultValue,\n  onChange,\n  locale,\n  format,\n  closeOnChange,\n  sortDates,\n  labelSeparator,\n  valueFormatter,\n}: UseDatesInput<Type>) {\n  const ctx = useDatesContext();\n\n  const [dropdownOpened, dropdownHandlers] = useDisclosure(false);\n\n  const [_value, _setValue] = useUncontrolledDates({\n    type,\n    value,\n    defaultValue,\n    onChange,\n  });\n\n  const formattedValue = getFormattedDate({\n    type,\n    date: _value,\n    locale: ctx.getLocale(locale),\n    format: format!,\n    labelSeparator: ctx.getLabelSeparator(labelSeparator),\n    formatter: valueFormatter,\n  });\n\n  const setValue = (val: any) => {\n    if (closeOnChange) {\n      if (type === 'default') {\n        dropdownHandlers.close();\n      }\n\n      if (type === 'range' && val[0] && val[1]) {\n        dropdownHandlers.close();\n      }\n    }\n\n    if (sortDates && type === 'multiple') {\n      _setValue([...val].sort((a, b) => (dayjs(a).isAfter(dayjs(b)) ? 1 : -1)));\n    } else {\n      _setValue(val);\n    }\n  };\n\n  const onClear = () => setValue(type === 'range' ? [null, null] : type === 'multiple' ? [] : null);\n  const shouldClear =\n    type === 'range' ? !!_value[0] : type === 'multiple' ? _value.length > 0 : _value !== null;\n\n  return {\n    _value,\n    setValue,\n    onClear,\n    shouldClear,\n    formattedValue,\n    dropdownOpened,\n    dropdownHandlers,\n  };\n}\n"],"mappings":";;;;;;;;AAoBO,SAASA,aAAuDA,CAAA;EACrEC,IAAA;EACAC,KAAA;EACAC,YAAA;EACAC,QAAA;EACAC,MAAA;EACAC,MAAA;EACAC,aAAA;EACAC,SAAA;EACAC,cAAA;EACAC;AACF,CAAwB;EACtB,MAAMC,GAAA,GAAMC,eAAgB;EAE5B,MAAM,CAACC,cAAA,EAAgBC,gBAAgB,IAAIC,aAAA,CAAc,KAAK;EAE9D,MAAM,CAACC,MAAA,EAAQC,SAAS,IAAIC,oBAAqB;IAC/CjB,IAAA;IACAC,KAAA;IACAC,YAAA;IACAC;EAAA,CACD;EAED,MAAMe,cAAA,GAAiBC,gBAAiB;IACtCnB,IAAA;IACAoB,IAAM,EAAAL,MAAA;IACNX,MAAA,EAAQM,GAAI,CAAAW,SAAA,CAAUjB,MAAM;IAC5BC,MAAA;IACAG,cAAA,EAAgBE,GAAI,CAAAY,iBAAA,CAAkBd,cAAc;IACpDe,SAAW,EAAAd;EAAA,CACZ;EAEK,MAAAe,QAAA,GAAYC,GAAa;IAC7B,IAAInB,aAAe;MACjB,IAAIN,IAAA,KAAS,SAAW;QACtBa,gBAAA,CAAiBa,KAAM;MAAA;MAGzB,IAAI1B,IAAA,KAAS,OAAW,IAAAyB,GAAA,CAAI,CAAC,CAAK,IAAAA,GAAA,CAAI,CAAC,CAAG;QACxCZ,gBAAA,CAAiBa,KAAM;MAAA;IACzB;IAGE,IAAAnB,SAAA,IAAaP,IAAA,KAAS,UAAY;MACpCgB,SAAA,CAAU,CAAC,GAAGS,GAAG,EAAEE,IAAK,EAACC,CAAA,EAAGC,CAAO,KAAAC,KAAA,CAAMF,CAAC,EAAEG,OAAA,CAAQD,KAAM,CAAAD,CAAC,CAAC,CAAI,OAAI,EAAG,CAAC;IAAA,CACnE;MACLb,SAAA,CAAUS,GAAG;IAAA;EAEjB;EAEA,MAAMO,OAAU,GAAAA,CAAA,KAAMR,QAAS,CAAAxB,IAAA,KAAS,OAAU,IAAC,IAAM,MAAI,CAAI,GAAAA,IAAA,KAAS,UAAa,QAAK,IAAI;EAChG,MAAMiC,WACJ,GAAAjC,IAAA,KAAS,OAAU,IAAC,CAACe,MAAA,CAAO,CAAC,IAAIf,IAAS,kBAAae,MAAO,CAAAmB,MAAA,GAAS,IAAInB,MAAW;EAEjF;IACLA,MAAA;IACAS,QAAA;IACAQ,OAAA;IACAC,WAAA;IACAf,cAAA;IACAN,cAAA;IACAC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}