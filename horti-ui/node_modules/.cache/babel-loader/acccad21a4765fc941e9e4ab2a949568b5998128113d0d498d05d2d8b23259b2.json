{"ast":null,"code":"'use client';\n\nimport dayjs from 'dayjs';\nimport { isAfterMinDate } from '../is-after-min-date/is-after-min-date.mjs';\nimport { isBeforeMaxDate } from '../is-before-max-date/is-before-max-date.mjs';\nimport { isSameMonth } from '../is-same-month/is-same-month.mjs';\nfunction getDateInTabOrder({\n  dates,\n  minDate,\n  maxDate,\n  getDayProps,\n  excludeDate,\n  hideOutsideDates,\n  month\n}) {\n  const enabledDates = dates.flat().filter(date => isBeforeMaxDate(date, maxDate) && isAfterMinDate(date, minDate) && !excludeDate?.(date) && !getDayProps?.(date)?.disabled && (!hideOutsideDates || isSameMonth(date, month)));\n  const selectedDate = enabledDates.find(date => getDayProps?.(date)?.selected);\n  if (selectedDate) {\n    return selectedDate;\n  }\n  const currentDate = enabledDates.find(date => dayjs().isSame(date, \"date\"));\n  if (currentDate) {\n    return currentDate;\n  }\n  return enabledDates[0];\n}\nexport { getDateInTabOrder };","map":{"version":3,"names":["getDateInTabOrder","dates","minDate","maxDate","getDayProps","excludeDate","hideOutsideDates","month","enabledDates","flat","filter","date","isBeforeMaxDate","isAfterMinDate","disabled","isSameMonth","selectedDate","find","selected","currentDate","dayjs","isSame"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/components/Month/get-date-in-tab-order/get-date-in-tab-order.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport { DateStringValue } from '../../../types';\nimport { DayProps } from '../../Day/Day';\nimport { isAfterMinDate } from '../is-after-min-date/is-after-min-date';\nimport { isBeforeMaxDate } from '../is-before-max-date/is-before-max-date';\nimport { isSameMonth } from '../is-same-month/is-same-month';\n\ninterface GetDateInTabOrderInput {\n  dates: DateStringValue[][];\n  minDate: DateStringValue | undefined;\n  maxDate: DateStringValue | undefined;\n  getDayProps: ((date: DateStringValue) => Partial<DayProps>) | undefined;\n  excludeDate: ((date: DateStringValue) => boolean) | undefined;\n  hideOutsideDates: boolean | undefined;\n  month: DateStringValue;\n}\n\nexport function getDateInTabOrder({\n  dates,\n  minDate,\n  maxDate,\n  getDayProps,\n  excludeDate,\n  hideOutsideDates,\n  month,\n}: GetDateInTabOrderInput) {\n  const enabledDates = dates\n    .flat()\n    .filter(\n      (date) =>\n        isBeforeMaxDate(date, maxDate) &&\n        isAfterMinDate(date, minDate) &&\n        !excludeDate?.(date) &&\n        !getDayProps?.(date)?.disabled &&\n        (!hideOutsideDates || isSameMonth(date, month))\n    );\n\n  const selectedDate = enabledDates.find((date) => getDayProps?.(date)?.selected);\n\n  if (selectedDate) {\n    return selectedDate;\n  }\n\n  const currentDate = enabledDates.find((date) => dayjs().isSame(date, 'date'));\n\n  if (currentDate) {\n    return currentDate;\n  }\n\n  return enabledDates[0];\n}\n"],"mappings":";;;;;;AAiBO,SAASA,iBAAkBA,CAAA;EAChCC,KAAA;EACAC,OAAA;EACAC,OAAA;EACAC,WAAA;EACAC,WAAA;EACAC,gBAAA;EACAC;AACF,CAA2B;EACnB,MAAAC,YAAA,GAAeP,KAClB,CAAAQ,IAAA,EACA,CAAAC,MAAA,CACEC,IAAA,IACCC,eAAgB,CAAAD,IAAA,EAAMR,OAAO,CAC7B,IAAAU,cAAA,CAAeF,IAAM,EAAAT,OAAO,CAC5B,KAACG,WAAA,GAAcM,IAAI,KACnB,CAACP,WAAA,GAAcO,IAAI,GAAGG,QAAA,KACrB,CAACR,gBAAA,IAAoBS,WAAY,CAAAJ,IAAA,EAAMJ,KAAK,EACjD;EAEI,MAAAS,YAAA,GAAeR,YAAA,CAAaS,IAAK,CAACN,IAAA,IAASP,WAAc,GAAAO,IAAI,GAAGO,QAAQ;EAE9E,IAAIF,YAAc;IACT,OAAAA,YAAA;EAAA;EAGH,MAAAG,WAAA,GAAcX,YAAa,CAAAS,IAAA,CAAMN,IAAA,IAASS,KAAA,EAAQ,CAAAC,MAAA,CAAOV,IAAM,QAAM,CAAC;EAE5E,IAAIQ,WAAa;IACR,OAAAA,WAAA;EAAA;EAGT,OAAOX,YAAA,CAAa,CAAC;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}