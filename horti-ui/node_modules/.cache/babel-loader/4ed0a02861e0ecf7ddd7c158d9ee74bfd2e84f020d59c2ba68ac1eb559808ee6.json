{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport { useMantineEnv } from '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles.mjs';\nimport { useTransition } from './use-transition.mjs';\nfunction Transition({\n  keepMounted,\n  transition = \"fade\",\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction = \"ease\",\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n  enterDelay,\n  exitDelay\n}) {\n  const env = useMantineEnv();\n  const {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction\n  } = useTransition({\n    mounted,\n    exitDuration,\n    duration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n    enterDelay,\n    exitDelay\n  });\n  if (transitionDuration === 0 || env === \"test\") {\n    return mounted ? /* @__PURE__ */jsx(Fragment, {\n      children: children({})\n    }) : keepMounted ? children({\n      display: \"none\"\n    }) : null;\n  }\n  return transitionStatus === \"exited\" ? keepMounted ? children({\n    display: \"none\"\n  }) : null : /* @__PURE__ */jsx(Fragment, {\n    children: children(getTransitionStyles({\n      transition,\n      duration: transitionDuration,\n      state: transitionStatus,\n      timingFunction: transitionTimingFunction\n    }))\n  });\n}\nTransition.displayName = \"@mantine/core/Transition\";\nexport { Transition };","map":{"version":3,"names":["Transition","keepMounted","transition","duration","exitDuration","mounted","children","timingFunction","onExit","onEntered","onEnter","onExited","enterDelay","exitDelay","env","useMantineEnv","transitionDuration","transitionStatus","transitionTimingFunction","useTransition","jsx","Fragment","display","getTransitionStyles","state","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/core/src/components/Transition/Transition.tsx"],"sourcesContent":["import { useMantineEnv } from '../../core';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { MantineTransition } from './transitions';\nimport { useTransition } from './use-transition';\n\nexport interface TransitionProps {\n  /** If set element will not be unmounted from the DOM when it is hidden, `display: none` styles will be applied instead */\n  keepMounted?: boolean;\n\n  /** Transition name or object */\n  transition?: MantineTransition;\n\n  /** Transition duration in ms, `250` by default */\n  duration?: number;\n\n  /** Exit transition duration in ms, `250` by default */\n  exitDuration?: number;\n\n  /** Transition timing function, `theme.transitionTimingFunction` by default */\n  timingFunction?: string;\n\n  /** Determines whether component should be mounted to the DOM */\n  mounted: boolean;\n\n  /** Render function with transition styles argument */\n  children: (styles: React.CSSProperties) => React.JSX.Element;\n\n  /** Called when exit transition ends */\n  onExited?: () => void;\n\n  /** Called when exit transition starts */\n  onExit?: () => void;\n\n  /** Called when enter transition starts */\n  onEnter?: () => void;\n\n  /** Called when enter transition ends */\n  onEntered?: () => void;\n\n  /** Delay in ms before enter transition starts */\n  enterDelay?: number;\n\n  /** Delay in ms before exit transition starts */\n  exitDelay?: number;\n}\n\nexport type TransitionOverride = Partial<Omit<TransitionProps, 'mounted'>>;\n\nexport function Transition({\n  keepMounted,\n  transition = 'fade',\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction = 'ease',\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n  enterDelay,\n  exitDelay,\n}: TransitionProps) {\n  const env = useMantineEnv();\n  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({\n    mounted,\n    exitDuration,\n    duration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n    enterDelay,\n    exitDelay,\n  });\n\n  if (transitionDuration === 0 || env === 'test') {\n    return mounted ? <>{children({})}</> : keepMounted ? children({ display: 'none' }) : null;\n  }\n\n  return transitionStatus === 'exited' ? (\n    keepMounted ? (\n      children({ display: 'none' })\n    ) : null\n  ) : (\n    <>\n      {children(\n        getTransitionStyles({\n          transition,\n          duration: transitionDuration,\n          state: transitionStatus,\n          timingFunction: transitionTimingFunction,\n        })\n      )}\n    </>\n  );\n}\n\nTransition.displayName = '@mantine/core/Transition';\n"],"mappings":";;;;;;;;;;;;;;;AAgDO,SAASA,UAAWA,CAAA;EACzBC,WAAA;EACAC,UAAa;EACbC,QAAW;EACXC,YAAe,GAAAD,QAAA;EACfE,OAAA;EACAC,QAAA;EACAC,cAAiB;EACjBC,MAAA;EACAC,SAAA;EACAC,OAAA;EACAC,QAAA;EACAC,UAAA;EACAC;AACF,CAAoB;EAClB,MAAMC,GAAA,GAAMC,aAAc;EAC1B,MAAM;IAAEC,kBAAA;IAAoBC,gBAAkB;IAAAC;EAAA,IAA6BC,aAAc;IACvFd,OAAA;IACAD,YAAA;IACAD,QAAA;IACAI,cAAA;IACAC,MAAA;IACAC,SAAA;IACAC,OAAA;IACAC,QAAA;IACAC,UAAA;IACAC;EAAA,CACD;EAEG,IAAAG,kBAAA,KAAuB,CAAK,IAAAF,GAAA,KAAQ,MAAQ;IAC9C,OAAOT,OAAU,kBAAAe,GAAA,CAAAC,QAAA;MAAGf,QAAS,EAAAA,QAAA,EAAE;IAAE,EAAM,GAAAL,WAAA,GAAcK,QAAS;MAAEgB,OAAS;IAAA,CAAQ,CAAI;EAAA;EAGhF,OAAAL,gBAAA,KAAqB,QAC1B,GAAAhB,WAAA,GACEK,QAAS;IAAEgB,OAAA,EAAS;EAAQ,EAC1B,UAGD,eAAAF,GAAA,CAAAC,QAAA;IAAAf,QAAA,EAAAA,QAAA,CACCiB,mBAAoB;MAClBrB,UAAA;MACAC,QAAU,EAAAa,kBAAA;MACVQ,KAAO,EAAAP,gBAAA;MACPV,cAAgB,EAAAW;IACjB;EAEL;AAEJ;AAEAlB,UAAA,CAAWyB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}