{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport { useMantineEnv } from '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Portal } from './Portal.mjs';\nconst OptionalPortal = factory(({\n  withinPortal = true,\n  children,\n  ...others\n}, ref) => {\n  const env = useMantineEnv();\n  if (env === \"test\" || !withinPortal) {\n    return /* @__PURE__ */jsx(Fragment, {\n      children\n    });\n  }\n  return /* @__PURE__ */jsx(Portal, {\n    ref,\n    ...others,\n    children\n  });\n});\nOptionalPortal.displayName = \"@mantine/core/OptionalPortal\";\nexport { OptionalPortal };","map":{"version":3,"names":["OptionalPortal","factory","withinPortal","children","others","ref","env","useMantineEnv","jsx","Fragment","Portal","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/core/src/components/Portal/OptionalPortal.tsx"],"sourcesContent":["import { factory, Factory, useMantineEnv } from '../../core';\nimport { Portal, PortalProps } from './Portal';\n\nexport interface OptionalPortalProps extends PortalProps {\n  /** Determines whether children should be rendered inside `<Portal />` */\n  withinPortal?: boolean;\n}\n\nexport type OptionalPortalFactory = Factory<{\n  props: OptionalPortalProps;\n  ref: HTMLDivElement;\n}>;\n\nexport const OptionalPortal = factory<OptionalPortalFactory>(\n  ({ withinPortal = true, children, ...others }, ref) => {\n    const env = useMantineEnv();\n\n    if (env === 'test' || !withinPortal) {\n      return <>{children}</>;\n    }\n\n    return (\n      <Portal ref={ref} {...others}>\n        {children}\n      </Portal>\n    );\n  }\n);\n\nOptionalPortal.displayName = '@mantine/core/OptionalPortal';\n"],"mappings":";;;;;;;;;;;;;;;AAaO,MAAMA,cAAiB,GAAAC,OAAA,CAC5B,CAAC;EAAEC,YAAe;EAAMC,QAAA;EAAU,GAAGC;AAAA,GAAUC,GAAQ;EACrD,MAAMC,GAAA,GAAMC,aAAc;EAEtB,IAAAD,GAAA,KAAQ,MAAU,KAACJ,YAAc;IACnC,sBAAAM,GAAA,CAAAC,QAAA;MAAUN;IAAS;EAAA;EAGrB,OACG,eAAAK,GAAA,CAAAE,MAAA;IAAOL,GAAW;IAAA,GAAGD,MAAA;IACnBD;EACH;AAAA,CAGN;AAEAH,cAAA,CAAeW,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}