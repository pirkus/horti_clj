{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ScrollArea } from '../ScrollArea/ScrollArea.mjs';\nimport classes from './Table.module.css.mjs';\nconst defaultProps = {\n  type: \"scrollarea\"\n};\nconst varsResolver = createVarsResolver((_, {\n  minWidth,\n  maxHeight,\n  type\n}) => ({\n  scrollContainer: {\n    \"--table-min-width\": rem(minWidth),\n    \"--table-max-height\": rem(maxHeight),\n    \"--table-overflow\": type === \"native\" ? \"auto\" : void 0\n  }\n}));\nconst TableScrollContainer = factory((_props, ref) => {\n  const props = useProps(\"TableScrollContainer\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    minWidth,\n    maxHeight,\n    type,\n    scrollAreaProps,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"TableScrollContainer\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: \"scrollContainer\"\n  });\n  return /* @__PURE__ */jsx(Box, {\n    component: type === \"scrollarea\" ? ScrollArea : \"div\",\n    ...(type === \"scrollarea\" ? maxHeight ? {\n      offsetScrollbars: \"xy\",\n      ...scrollAreaProps\n    } : {\n      offsetScrollbars: \"x\",\n      ...scrollAreaProps\n    } : {}),\n    ref,\n    ...getStyles(\"scrollContainer\"),\n    ...others,\n    children: /* @__PURE__ */jsx(\"div\", {\n      ...getStyles(\"scrollContainerInner\"),\n      children\n    })\n  });\n});\nTableScrollContainer.classes = classes;\nTableScrollContainer.displayName = \"@mantine/core/TableScrollContainer\";\nexport { TableScrollContainer };","map":{"version":3,"names":["defaultProps","type","varsResolver","createVarsResolver","_","minWidth","maxHeight","scrollContainer","rem","TableScrollContainer","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","scrollAreaProps","others","getStyles","useStyles","name","classes","rootSelector","jsx","Box","component","ScrollArea","offsetScrollbars","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/core/src/components/Table/TableScrollContainer.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ScrollArea, ScrollAreaProps } from '../ScrollArea';\nimport classes from './Table.module.css';\n\nexport type TableScrollContainerStylesNames = 'scrollContainer' | 'scrollContainerInner';\nexport type TableScrollContainerCssVariables = {\n  scrollContainer: '--table-min-width' | '--table-max-height' | '--table-overflow';\n};\n\nexport interface TableScrollContainerProps\n  extends BoxProps,\n    StylesApiProps<TableScrollContainerFactory>,\n    ElementProps<'div'> {\n  /** `min-width` of the `Table` at which it should become scrollable */\n  minWidth: React.CSSProperties['minWidth'];\n\n  /** `max-height` of the `Table` at which it should become scrollable */\n  maxHeight?: React.CSSProperties['maxHeight'];\n\n  /** Type of the scroll container, `native` to use native scrollbars, `scrollarea` to use `ScrollArea` component, `scrollarea` by default */\n  type?: 'native' | 'scrollarea';\n\n  /** Props passed down to `ScrollArea` component, not applicable with `type=\"native\"` */\n  scrollAreaProps?: ScrollAreaProps;\n}\n\nexport type TableScrollContainerFactory = Factory<{\n  props: TableScrollContainerProps;\n  ref: HTMLDivElement;\n  stylesNames: TableScrollContainerStylesNames;\n  vars: TableScrollContainerCssVariables;\n}>;\n\nconst defaultProps: Partial<TableScrollContainerProps> = {\n  type: 'scrollarea',\n};\n\nconst varsResolver = createVarsResolver<TableScrollContainerFactory>(\n  (_, { minWidth, maxHeight, type }) => ({\n    scrollContainer: {\n      '--table-min-width': rem(minWidth),\n      '--table-max-height': rem(maxHeight),\n      '--table-overflow': type === 'native' ? 'auto' : undefined,\n    },\n  })\n);\n\nexport const TableScrollContainer = factory<TableScrollContainerFactory>((_props, ref) => {\n  const props = useProps('TableScrollContainer', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    minWidth,\n    maxHeight,\n    type,\n    scrollAreaProps,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableScrollContainerFactory>({\n    name: 'TableScrollContainer',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'scrollContainer',\n  });\n\n  return (\n    <Box<any>\n      component={type === 'scrollarea' ? ScrollArea : 'div'}\n      {...(type === 'scrollarea'\n        ? maxHeight\n          ? { offsetScrollbars: 'xy', ...scrollAreaProps }\n          : { offsetScrollbars: 'x', ...scrollAreaProps }\n        : {})}\n      ref={ref}\n      {...getStyles('scrollContainer')}\n      {...others}\n    >\n      <div {...getStyles('scrollContainerInner')}>{children}</div>\n    </Box>\n  );\n});\n\nTableScrollContainer.classes = classes;\nTableScrollContainer.displayName = '@mantine/core/TableScrollContainer';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AA4CA,MAAMA,YAAmD;EACvDC,IAAM;AACR;AAEA,MAAMC,YAAe,GAAAC,kBAAA,CACnB,CAACC,CAAG;EAAEC,QAAU;EAAAC,SAAA;EAAWL;AAAA,CAAY;EACrCM,eAAiB;IACf,qBAAqBC,GAAA,CAAIH,QAAQ;IACjC,sBAAsBG,GAAA,CAAIF,SAAS;IACnC,oBAAoBL,IAAS,gBAAW,MAAS;EAAA;AAErD,EACF;AAEO,MAAMQ,oBAAuB,GAAAC,OAAA,CAAqC,CAACC,MAAA,EAAQC,GAAQ;EACxF,MAAMC,KAAQ,GAAAC,QAAA,CAAS,sBAAwB,EAAAd,YAAA,EAAcW,MAAM;EAC7D;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,QAAA;IACAhB,QAAA;IACAC,SAAA;IACAL,IAAA;IACAqB,eAAA;IACA,GAAGC;EAAA,CACD,GAAAV,KAAA;EAEJ,MAAMW,SAAA,GAAYC,SAAuC;IACvDC,IAAM;IACNC,OAAA;IACAd,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACAlB,YAAA;IACA0B,YAAc;EAAA,CACf;EAGC,sBAAAC,GAAA,CAACC,GAAA;IACCC,SAAA,EAAW9B,IAAS,oBAAe+B,UAAa;IAC/C,IAAI/B,IAAS,oBACVK,SACE;MAAE2B,gBAAA,EAAkB,IAAM;MAAA,GAAGX;IAAgB,IAC7C;MAAEW,gBAAkB;MAAK,GAAGX;IAAA,IAC9B,CAAC;IACLV,GAAA;IACC,GAAGY,SAAA,CAAU,iBAAiB;IAC9B,GAAGD,MAAA;IAEJF,QAAA,iBAAAQ,GAAA,CAAC,KAAK;MAAA,GAAGL,SAAU,uBAAsB;MAAIH;IAAS;EAAA,CACxD;AAEJ,CAAC;AAEDZ,oBAAA,CAAqBkB,OAAU,GAAAA,OAAA;AAC/BlB,oBAAA,CAAqByB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}