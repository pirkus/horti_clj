{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { SimpleGrid } from '@mantine/core';\nimport { useTimePickerContext } from '../TimePicker.context.mjs';\nimport { isSameTime } from '../utils/is-same-time/is-same-time.mjs';\nimport { TimePresetControl } from './TimePresetControl.mjs';\nfunction TimePresetGroup({\n  value,\n  data,\n  onChange,\n  format,\n  amPmLabels,\n  withSeconds\n}) {\n  const ctx = useTimePickerContext();\n  const items = data.values.map(item => /* @__PURE__ */jsx(TimePresetControl, {\n    value: item,\n    format,\n    amPmLabels,\n    withSeconds,\n    active: isSameTime({\n      time: item,\n      compare: value,\n      withSeconds\n    }),\n    onChange\n  }, item));\n  return /* @__PURE__ */jsxs(\"div\", {\n    ...ctx.getStyles(\"presetsGroup\"),\n    children: [/* @__PURE__ */jsx(\"div\", {\n      ...ctx.getStyles(\"presetsGroupLabel\"),\n      children: data.label\n    }), /* @__PURE__ */jsx(SimpleGrid, {\n      cols: withSeconds ? 2 : 3,\n      spacing: 4,\n      children: items\n    })]\n  });\n}\nTimePresetGroup.displayName = \"@mantine/dates/TimePresetGroup\";\nexport { TimePresetGroup };","map":{"version":3,"names":["TimePresetGroup","value","data","onChange","format","amPmLabels","withSeconds","ctx","useTimePickerContext","items","values","map","item","jsx","TimePresetControl","active","isSameTime","time","compare","jsxs","getStyles","children","label","SimpleGrid","cols","spacing","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/components/TimePicker/TimePresets/TimePresetGroup.tsx"],"sourcesContent":["import { SimpleGrid } from '@mantine/core';\nimport { useTimePickerContext } from '../TimePicker.context';\nimport { TimePickerAmPmLabels, TimePickerFormat, TimePickerPresetGroup } from '../TimePicker.types';\nimport { isSameTime } from '../utils/is-same-time/is-same-time';\nimport { TimePresetControl } from './TimePresetControl';\n\ninterface TimePresetGroupProps {\n  value: string;\n  data: TimePickerPresetGroup;\n  onChange: (value: string) => void;\n  format: TimePickerFormat;\n  amPmLabels: TimePickerAmPmLabels;\n  withSeconds: boolean;\n}\n\nexport function TimePresetGroup({\n  value,\n  data,\n  onChange,\n  format,\n  amPmLabels,\n  withSeconds,\n}: TimePresetGroupProps) {\n  const ctx = useTimePickerContext();\n\n  const items = data.values.map((item) => (\n    <TimePresetControl\n      key={item}\n      value={item}\n      format={format}\n      amPmLabels={amPmLabels}\n      withSeconds={withSeconds}\n      active={isSameTime({ time: item, compare: value, withSeconds })}\n      onChange={onChange}\n    />\n  ));\n\n  return (\n    <div {...ctx.getStyles('presetsGroup')}>\n      <div {...ctx.getStyles('presetsGroupLabel')}>{data.label}</div>\n      <SimpleGrid cols={withSeconds ? 2 : 3} spacing={4}>\n        {items}\n      </SimpleGrid>\n    </div>\n  );\n}\n\nTimePresetGroup.displayName = '@mantine/dates/TimePresetGroup';\n"],"mappings":";;;;;;;AAeO,SAASA,eAAgBA,CAAA;EAC9BC,KAAA;EACAC,IAAA;EACAC,QAAA;EACAC,MAAA;EACAC,UAAA;EACAC;AACF,CAAyB;EACvB,MAAMC,GAAA,GAAMC,oBAAqB;EAEjC,MAAMC,KAAQ,GAAAP,IAAA,CAAKQ,MAAO,CAAAC,GAAA,CAAKC,IAC7B,mBAAAC,GAAA,CAACC,iBAAA;IAECb,KAAO,EAAAW,IAAA;IACPR,MAAA;IACAC,UAAA;IACAC,WAAA;IACAS,MAAA,EAAQC,UAAA,CAAW;MAAEC,IAAA,EAAML,IAAA;MAAMM,OAAS,EAAAjB,KAAA;MAAOK;IAAA,CAAa;IAC9DH;EAAA,GANKS,IAAA,CAQR;EAED,sBAAAO,IAAA,CACG,KAAK;IAAA,GAAGZ,GAAI,CAAAa,SAAA,CAAU,cAAc,CACnC;IAAAC,QAAA,kBAAAR,GAAA,CAAC;MAAK,GAAGN,GAAA,CAAIa,SAAA,CAAU,mBAAmB;MAAIC,QAAA,EAAAnB,IAAA,CAAKoB;IAAM,IACzD,eAAAT,GAAA,CAACU,UAAA;MAAWC,IAAM,EAAAlB,WAAA,GAAc,IAAI,CAAG;MAAAmB,OAAA,EAAS;MAC7CJ,QACH,EAAAZ;IAAA;EACF;AAEJ;AAEAT,eAAA,CAAgB0B,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}