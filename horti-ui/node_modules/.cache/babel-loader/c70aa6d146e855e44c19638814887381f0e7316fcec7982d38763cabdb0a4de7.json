{"ast":null,"code":"'use client';\n\nimport dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport { useUncontrolledDates } from '../use-uncontrolled-dates/use-uncontrolled-dates.mjs';\nimport { isInRange } from './is-in-range/is-in-range.mjs';\nfunction useDatesState({\n  type,\n  level,\n  value,\n  defaultValue,\n  onChange,\n  allowSingleDateInRange,\n  allowDeselect,\n  onMouseLeave\n}) {\n  const [_value, setValue] = useUncontrolledDates({\n    type,\n    value,\n    defaultValue,\n    onChange\n  });\n  const [pickedDate, setPickedDate] = useState(type === \"range\" ? _value[0] && !_value[1] ? _value[0] : null : null);\n  const [hoveredDate, setHoveredDate] = useState(null);\n  const onDateChange = date => {\n    if (type === \"range\") {\n      if (pickedDate && !_value[1]) {\n        if (dayjs(date).isSame(pickedDate, level) && !allowSingleDateInRange) {\n          setPickedDate(null);\n          setHoveredDate(null);\n          setValue([null, null]);\n          return;\n        }\n        const result = [date, pickedDate];\n        result.sort((a, b) => dayjs(a).isAfter(dayjs(b)) ? 1 : -1);\n        setValue(result);\n        setHoveredDate(null);\n        setPickedDate(null);\n        return;\n      }\n      if (_value[0] && !_value[1] && dayjs(date).isSame(_value[0], level) && !allowSingleDateInRange) {\n        setPickedDate(null);\n        setHoveredDate(null);\n        setValue([null, null]);\n        return;\n      }\n      setValue([date, null]);\n      setHoveredDate(null);\n      setPickedDate(date);\n      return;\n    }\n    if (type === \"multiple\") {\n      if (_value.some(selected => dayjs(selected).isSame(date, level))) {\n        setValue(_value.filter(selected => !dayjs(selected).isSame(date, level)));\n      } else {\n        setValue([..._value, date]);\n      }\n      return;\n    }\n    if (_value && allowDeselect && dayjs(date).isSame(_value, level)) {\n      setValue(null);\n    } else {\n      setValue(date);\n    }\n  };\n  const isDateInRange = date => {\n    if (pickedDate && hoveredDate) {\n      return isInRange(date, [hoveredDate, pickedDate]);\n    }\n    if (_value[0] && _value[1]) {\n      return isInRange(date, _value);\n    }\n    return false;\n  };\n  const onRootMouseLeave = type === \"range\" ? event => {\n    onMouseLeave?.(event);\n    setHoveredDate(null);\n  } : onMouseLeave;\n  const isFirstInRange = date => {\n    if (!_value[0]) {\n      return false;\n    }\n    if (dayjs(date).isSame(_value[0], level)) {\n      return !(hoveredDate && dayjs(hoveredDate).isBefore(_value[0]));\n    }\n    return false;\n  };\n  const isLastInRange = date => {\n    if (_value[1]) {\n      return dayjs(date).isSame(_value[1], level);\n    }\n    if (!_value[0] || !hoveredDate) {\n      return false;\n    }\n    return dayjs(hoveredDate).isBefore(_value[0]) && dayjs(date).isSame(_value[0], level);\n  };\n  const getControlProps = date => {\n    if (type === \"range\") {\n      return {\n        selected: _value.some(selection => selection && dayjs(selection).isSame(date, level)),\n        inRange: isDateInRange(date),\n        firstInRange: isFirstInRange(date),\n        lastInRange: isLastInRange(date),\n        \"data-autofocus\": !!_value[0] && dayjs(_value[0]).isSame(date, level) || void 0\n      };\n    }\n    if (type === \"multiple\") {\n      return {\n        selected: _value.some(selection => selection && dayjs(selection).isSame(date, level)),\n        \"data-autofocus\": !!_value[0] && dayjs(_value[0]).isSame(date, level) || void 0\n      };\n    }\n    const selected = dayjs(_value).isSame(date, level);\n    return {\n      selected,\n      \"data-autofocus\": selected || void 0\n    };\n  };\n  const onHoveredDateChange = type === \"range\" && pickedDate ? setHoveredDate : () => {};\n  useEffect(() => {\n    if (type !== \"range\") {\n      return;\n    }\n    if (_value[0] && !_value[1]) {\n      setPickedDate(_value[0]);\n    } else {\n      const isNeitherSelected = _value[0] == null && _value[1] == null;\n      const isBothSelected = _value[0] != null && _value[1] != null;\n      if (isNeitherSelected || isBothSelected) {\n        setPickedDate(null);\n        setHoveredDate(null);\n      }\n    }\n  }, [_value]);\n  return {\n    onDateChange,\n    onRootMouseLeave,\n    onHoveredDateChange,\n    getControlProps,\n    _value,\n    setValue\n  };\n}\nexport { useDatesState };","map":{"version":3,"names":["useDatesState","type","level","value","defaultValue","onChange","allowSingleDateInRange","allowDeselect","onMouseLeave","_value","setValue","useUncontrolledDates","pickedDate","setPickedDate","useState","hoveredDate","setHoveredDate","onDateChange","date","dayjs","isSame","result","sort","a","b","isAfter","some","selected","filter","isDateInRange","isInRange","onRootMouseLeave","event","isFirstInRange","isBefore","isLastInRange","getControlProps","selection","inRange","firstInRange","lastInRange","onHoveredDateChange","useEffect","isNeitherSelected","isBothSelected"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/hooks/use-dates-state/use-dates-state.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport { useEffect, useState } from 'react';\nimport { DatePickerType, DateStringValue, PickerBaseProps } from '../../types';\nimport { useUncontrolledDates } from '../use-uncontrolled-dates/use-uncontrolled-dates';\nimport { isInRange } from './is-in-range/is-in-range';\n\ninterface UseDatesRangeInput<Type extends DatePickerType = 'default'>\n  extends PickerBaseProps<Type> {\n  level: 'year' | 'month' | 'day';\n  type: Type;\n  onMouseLeave?: (event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport function useDatesState<Type extends DatePickerType = 'default'>({\n  type,\n  level,\n  value,\n  defaultValue,\n  onChange,\n  allowSingleDateInRange,\n  allowDeselect,\n  onMouseLeave,\n}: UseDatesRangeInput<Type>) {\n  const [_value, setValue] = useUncontrolledDates({\n    type,\n    value,\n    defaultValue,\n    onChange,\n  });\n\n  const [pickedDate, setPickedDate] = useState<DateStringValue | null>(\n    type === 'range' ? (_value[0] && !_value[1] ? _value[0] : null) : null\n  );\n  const [hoveredDate, setHoveredDate] = useState<DateStringValue | null>(null);\n\n  const onDateChange = (date: DateStringValue) => {\n    if (type === 'range') {\n      if (pickedDate && !_value[1]) {\n        if (dayjs(date).isSame(pickedDate, level) && !allowSingleDateInRange) {\n          setPickedDate(null);\n          setHoveredDate(null);\n          setValue([null, null]);\n          return;\n        }\n\n        const result: [DateStringValue, DateStringValue] = [date, pickedDate];\n        result.sort((a, b) => (dayjs(a).isAfter(dayjs(b)) ? 1 : -1));\n        setValue(result);\n        setHoveredDate(null);\n        setPickedDate(null);\n        return;\n      }\n\n      if (\n        _value[0] &&\n        !_value[1] &&\n        dayjs(date).isSame(_value[0], level) &&\n        !allowSingleDateInRange\n      ) {\n        setPickedDate(null);\n        setHoveredDate(null);\n        setValue([null, null]);\n        return;\n      }\n\n      setValue([date, null]);\n      setHoveredDate(null);\n      setPickedDate(date);\n      return;\n    }\n\n    if (type === 'multiple') {\n      if (_value.some((selected: Date) => dayjs(selected).isSame(date, level))) {\n        setValue(_value.filter((selected: Date) => !dayjs(selected).isSame(date, level)));\n      } else {\n        setValue([..._value, date]);\n      }\n\n      return;\n    }\n\n    if (_value && allowDeselect && dayjs(date).isSame(_value, level)) {\n      setValue(null);\n    } else {\n      setValue(date);\n    }\n  };\n\n  const isDateInRange = (date: DateStringValue) => {\n    if (pickedDate && hoveredDate) {\n      return isInRange(date, [hoveredDate, pickedDate]);\n    }\n\n    if (_value[0] && _value[1]) {\n      return isInRange(date, _value);\n    }\n\n    return false;\n  };\n\n  const onRootMouseLeave =\n    type === 'range'\n      ? (event: React.MouseEvent<HTMLDivElement>) => {\n          onMouseLeave?.(event);\n          setHoveredDate(null);\n        }\n      : onMouseLeave;\n\n  const isFirstInRange = (date: DateStringValue) => {\n    if (!_value[0]) {\n      return false;\n    }\n\n    if (dayjs(date).isSame(_value[0], level)) {\n      return !(hoveredDate && dayjs(hoveredDate).isBefore(_value[0]));\n    }\n\n    return false;\n  };\n\n  const isLastInRange = (date: DateStringValue) => {\n    if (_value[1]) {\n      return dayjs(date).isSame(_value[1], level);\n    }\n\n    if (!_value[0] || !hoveredDate) {\n      return false;\n    }\n\n    return dayjs(hoveredDate).isBefore(_value[0]) && dayjs(date).isSame(_value[0], level);\n  };\n\n  const getControlProps = (date: DateStringValue) => {\n    if (type === 'range') {\n      return {\n        selected: _value.some(\n          (selection: DateStringValue) => selection && dayjs(selection).isSame(date, level)\n        ),\n        inRange: isDateInRange(date),\n        firstInRange: isFirstInRange(date),\n        lastInRange: isLastInRange(date),\n        'data-autofocus': (!!_value[0] && dayjs(_value[0]).isSame(date, level)) || undefined,\n      };\n    }\n\n    if (type === 'multiple') {\n      return {\n        selected: _value.some(\n          (selection: DateStringValue) => selection && dayjs(selection).isSame(date, level)\n        ),\n        'data-autofocus': (!!_value[0] && dayjs(_value[0]).isSame(date, level)) || undefined,\n      };\n    }\n\n    const selected = dayjs(_value).isSame(date, level);\n    return { selected, 'data-autofocus': selected || undefined };\n  };\n\n  const onHoveredDateChange = type === 'range' && pickedDate ? setHoveredDate : () => {};\n\n  useEffect(() => {\n    if (type !== 'range') {\n      return;\n    }\n\n    if (_value[0] && !_value[1]) {\n      setPickedDate(_value[0]);\n    } else {\n      const isNeitherSelected = _value[0] == null && _value[1] == null;\n      const isBothSelected = _value[0] != null && _value[1] != null;\n      if (isNeitherSelected || isBothSelected) {\n        setPickedDate(null);\n        setHoveredDate(null);\n      }\n    }\n  }, [_value]);\n\n  return {\n    onDateChange,\n    onRootMouseLeave,\n    onHoveredDateChange,\n    getControlProps,\n    _value,\n    setValue,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}