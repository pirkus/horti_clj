{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { createScopedKeydownHandler } from '../../../core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.mjs';\nimport { createEventHandler } from '../../../core/utils/create-event-handler/create-event-handler.mjs';\nimport 'clsx';\nimport { parseThemeColor } from '../../../core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../../core/factory/polymorphic-factory.mjs';\nimport { useDirection } from '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.mjs';\nimport { useMenuContext } from '../Menu.context.mjs';\nimport { useSubMenuContext } from '../MenuSub/MenuSub.context.mjs';\nimport classes from '../Menu.module.css.mjs';\nconst defaultProps = {};\nconst MenuItem = polymorphicFactory((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    color,\n    closeMenuOnClick,\n    leftSection,\n    rightSection,\n    children,\n    disabled,\n    \"data-disabled\": dataDisabled,\n    ...others\n  } = useProps(\"MenuItem\", defaultProps, props);\n  const ctx = useMenuContext();\n  const subCtx = useSubMenuContext();\n  const theme = useMantineTheme();\n  const {\n    dir\n  } = useDirection();\n  const itemRef = useRef(null);\n  const _others = others;\n  const handleClick = createEventHandler(_others.onClick, () => {\n    if (dataDisabled) {\n      return;\n    }\n    if (typeof closeMenuOnClick === \"boolean\") {\n      closeMenuOnClick && ctx.closeDropdownImmediately();\n    } else {\n      ctx.closeOnItemClick && ctx.closeDropdownImmediately();\n    }\n  });\n  const colors = color ? theme.variantColorResolver({\n    color,\n    theme,\n    variant: \"light\"\n  }) : void 0;\n  const parsedThemeColor = color ? parseThemeColor({\n    color,\n    theme\n  }) : null;\n  const handleKeydown = createEventHandler(_others.onKeyDown, event => {\n    if (event.key === \"ArrowLeft\" && subCtx) {\n      subCtx.close();\n      subCtx.focusParentItem();\n    }\n  });\n  return /* @__PURE__ */jsxs(UnstyledButton, {\n    onMouseDown: event => event.preventDefault(),\n    ...others,\n    unstyled: ctx.unstyled,\n    tabIndex: ctx.menuItemTabIndex,\n    ...ctx.getStyles(\"item\", {\n      className,\n      style,\n      styles,\n      classNames\n    }),\n    ref: useMergedRef(itemRef, ref),\n    role: \"menuitem\",\n    disabled,\n    \"data-menu-item\": true,\n    \"data-disabled\": disabled || dataDisabled || void 0,\n    \"data-mantine-stop-propagation\": true,\n    onClick: handleClick,\n    onKeyDown: createScopedKeydownHandler({\n      siblingSelector: \"[data-menu-item]:not([data-disabled])\",\n      parentSelector: \"[data-menu-dropdown]\",\n      activateOnFocus: false,\n      loop: ctx.loop,\n      dir,\n      orientation: \"vertical\",\n      onKeyDown: handleKeydown\n    }),\n    __vars: {\n      \"--menu-item-color\": parsedThemeColor?.isThemeColor && parsedThemeColor?.shade === void 0 ? `var(--mantine-color-${parsedThemeColor.color}-6)` : colors?.color,\n      \"--menu-item-hover\": colors?.hover\n    },\n    children: [leftSection && /* @__PURE__ */jsx(\"div\", {\n      ...ctx.getStyles(\"itemSection\", {\n        styles,\n        classNames\n      }),\n      \"data-position\": \"left\",\n      children: leftSection\n    }), children && /* @__PURE__ */jsx(\"div\", {\n      ...ctx.getStyles(\"itemLabel\", {\n        styles,\n        classNames\n      }),\n      children\n    }), rightSection && /* @__PURE__ */jsx(\"div\", {\n      ...ctx.getStyles(\"itemSection\", {\n        styles,\n        classNames\n      }),\n      \"data-position\": \"right\",\n      children: rightSection\n    })]\n  });\n});\nMenuItem.classes = classes;\nMenuItem.displayName = \"@mantine/core/MenuItem\";\nexport { MenuItem };","map":{"version":3,"names":["defaultProps","MenuItem","polymorphicFactory","props","ref","classNames","className","style","styles","vars","color","closeMenuOnClick","leftSection","rightSection","children","disabled","dataDisabled","others","useProps","ctx","useMenuContext","subCtx","useSubMenuContext","theme","useMantineTheme","dir","useDirection","itemRef","useRef","_others","handleClick","createEventHandler","onClick","closeDropdownImmediately","closeOnItemClick","colors","variantColorResolver","variant","parsedThemeColor","parseThemeColor","handleKeydown","onKeyDown","event","key","close","focusParentItem","jsxs","UnstyledButton","onMouseDown","preventDefault","unstyled","tabIndex","menuItemTabIndex","getStyles","useMergedRef","role","createScopedKeydownHandler","siblingSelector","parentSelector","activateOnFocus","loop","orientation","__vars","isThemeColor","shade","hover","jsx","classes","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/core/src/components/Menu/MenuItem/MenuItem.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  BoxProps,\n  CompoundStylesApiProps,\n  createEventHandler,\n  createScopedKeydownHandler,\n  MantineColor,\n  parseThemeColor,\n  polymorphicFactory,\n  PolymorphicFactory,\n  useDirection,\n  useMantineTheme,\n  useProps,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { useMenuContext } from '../Menu.context';\nimport { useSubMenuContext } from '../MenuSub/MenuSub.context';\nimport classes from '../Menu.module.css';\n\nexport type MenuItemStylesNames = 'item' | 'itemLabel' | 'itemSection';\n\nexport interface MenuItemProps extends BoxProps, CompoundStylesApiProps<MenuItemFactory> {\n  'data-disabled'?: boolean;\n\n  /** Item label */\n  children?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color */\n  color?: MantineColor;\n\n  /** Determines whether the menu should be closed when the item is clicked, overrides `closeOnItemClick` prop on the `Menu` component */\n  closeMenuOnClick?: boolean;\n\n  /** Section displayed on the left side of the label */\n  leftSection?: React.ReactNode;\n\n  /** Section displayed on the right side of the label */\n  rightSection?: React.ReactNode;\n\n  /** Disables item */\n  disabled?: boolean;\n}\n\nexport type MenuItemFactory = PolymorphicFactory<{\n  props: MenuItemProps;\n  defaultRef: HTMLButtonElement;\n  defaultComponent: 'button';\n  stylesNames: MenuItemStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<MenuItemProps> = {};\n\nexport const MenuItem = polymorphicFactory<MenuItemFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    color,\n    closeMenuOnClick,\n    leftSection,\n    rightSection,\n    children,\n    disabled,\n    'data-disabled': dataDisabled,\n    ...others\n  } = useProps('MenuItem', defaultProps, props);\n\n  const ctx = useMenuContext();\n  const subCtx = useSubMenuContext();\n  const theme = useMantineTheme();\n  const { dir } = useDirection();\n  const itemRef = useRef<HTMLButtonElement>(null);\n  const _others: any = others;\n\n  const handleClick = createEventHandler(_others.onClick, () => {\n    if (dataDisabled) {\n      return;\n    }\n    if (typeof closeMenuOnClick === 'boolean') {\n      closeMenuOnClick && ctx.closeDropdownImmediately();\n    } else {\n      ctx.closeOnItemClick && ctx.closeDropdownImmediately();\n    }\n  });\n\n  const colors = color ? theme.variantColorResolver({ color, theme, variant: 'light' }) : undefined;\n  const parsedThemeColor = color ? parseThemeColor({ color, theme }) : null;\n\n  const handleKeydown = createEventHandler<any>(_others.onKeyDown, (event) => {\n    if (event.key === 'ArrowLeft' && subCtx) {\n      subCtx.close();\n      subCtx.focusParentItem();\n    }\n  });\n\n  return (\n    <UnstyledButton\n      onMouseDown={(event) => event.preventDefault()}\n      {...others}\n      unstyled={ctx.unstyled}\n      tabIndex={ctx.menuItemTabIndex}\n      {...ctx.getStyles('item', { className, style, styles, classNames })}\n      ref={useMergedRef(itemRef, ref)}\n      role=\"menuitem\"\n      disabled={disabled}\n      data-menu-item\n      data-disabled={disabled || dataDisabled || undefined}\n      data-mantine-stop-propagation\n      onClick={handleClick}\n      onKeyDown={createScopedKeydownHandler({\n        siblingSelector: '[data-menu-item]:not([data-disabled])',\n        parentSelector: '[data-menu-dropdown]',\n        activateOnFocus: false,\n        loop: ctx.loop,\n        dir,\n        orientation: 'vertical',\n        onKeyDown: handleKeydown,\n      })}\n      __vars={{\n        '--menu-item-color':\n          parsedThemeColor?.isThemeColor && parsedThemeColor?.shade === undefined\n            ? `var(--mantine-color-${parsedThemeColor.color}-6)`\n            : colors?.color,\n        '--menu-item-hover': colors?.hover,\n      }}\n    >\n      {leftSection && (\n        <div {...ctx.getStyles('itemSection', { styles, classNames })} data-position=\"left\">\n          {leftSection}\n        </div>\n      )}\n      {children && <div {...ctx.getStyles('itemLabel', { styles, classNames })}>{children}</div>}\n      {rightSection && (\n        <div {...ctx.getStyles('itemSection', { styles, classNames })} data-position=\"right\">\n          {rightSection}\n        </div>\n      )}\n    </UnstyledButton>\n  );\n});\n\nMenuItem.classes = classes;\nMenuItem.displayName = '@mantine/core/MenuItem';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}