{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useCallback } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nconst defaultOptions = {\n  multiple: true,\n  accept: \"*\"\n};\nfunction getInitialFilesList(files) {\n  if (!files) {\n    return null;\n  }\n  if (files instanceof FileList) {\n    return files;\n  }\n  const result = new DataTransfer();\n  for (const file of files) {\n    result.items.add(file);\n  }\n  return result.files;\n}\nfunction createInput(options) {\n  if (typeof document === \"undefined\") {\n    return null;\n  }\n  const input = document.createElement(\"input\");\n  input.type = \"file\";\n  if (options.accept) {\n    input.accept = options.accept;\n  }\n  if (options.multiple) {\n    input.multiple = options.multiple;\n  }\n  if (options.capture) {\n    input.capture = options.capture;\n  }\n  if (options.directory) {\n    input.webkitdirectory = options.directory;\n  }\n  input.style.display = \"none\";\n  return input;\n}\nfunction useFileDialog(input = {}) {\n  const options = {\n    ...defaultOptions,\n    ...input\n  };\n  const [files, setFiles] = useState(getInitialFilesList(options.initialFiles));\n  const inputRef = useRef(null);\n  const handleChange = useCallback(event => {\n    const target = event.target;\n    if (target?.files) {\n      setFiles(target.files);\n      options.onChange?.(target.files);\n    }\n  }, [options.onChange]);\n  const createAndSetupInput = useCallback(() => {\n    inputRef.current?.remove();\n    inputRef.current = createInput(options);\n    if (inputRef.current) {\n      inputRef.current.addEventListener(\"change\", handleChange, {\n        once: true\n      });\n      document.body.appendChild(inputRef.current);\n    }\n  }, [options, handleChange]);\n  useIsomorphicEffect(() => {\n    createAndSetupInput();\n    return () => inputRef.current?.remove();\n  }, []);\n  const reset = useCallback(() => {\n    setFiles(null);\n    options.onChange?.(null);\n  }, [options.onChange]);\n  const open = useCallback(() => {\n    if (options.resetOnOpen) {\n      reset();\n    }\n    createAndSetupInput();\n    inputRef.current?.click();\n  }, [options.resetOnOpen, reset, createAndSetupInput]);\n  return {\n    files,\n    open,\n    reset\n  };\n}\nexport { useFileDialog };","map":{"version":3,"names":["defaultOptions","multiple","accept","getInitialFilesList","files","FileList","result","DataTransfer","file","items","add","createInput","options","document","input","createElement","type","capture","directory","webkitdirectory","style","display","useFileDialog","setFiles","useState","initialFiles","inputRef","useRef","handleChange","useCallback","event","target","onChange","createAndSetupInput","current","remove","addEventListener","once","body","appendChild","useIsomorphicEffect","reset","open","resetOnOpen","click"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/hooks/src/use-file-dialog/use-file-dialog.ts"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nexport interface UseFileDialogOptions {\n  /** Determines whether multiple files are allowed, `true` by default */\n  multiple?: boolean;\n\n  /** `accept` attribute of the file input, '*' by default */\n  accept?: string;\n\n  /** `capture` attribute of the file input */\n  capture?: string;\n\n  /** Determines whether the user can pick a directory instead of file, `false` by default */\n  directory?: boolean;\n\n  /** Determines whether the file input state should be reset when the file dialog is opened, `false` by default */\n  resetOnOpen?: boolean;\n\n  /** Initial selected files */\n  initialFiles?: FileList | File[];\n\n  /** Called when files are selected */\n  onChange?: (files: FileList | null) => void;\n\n  /** Called when file dialog is canceled */\n  onCancel?: () => void;\n}\n\nconst defaultOptions: UseFileDialogOptions = {\n  multiple: true,\n  accept: '*',\n};\n\nfunction getInitialFilesList(files: UseFileDialogOptions['initialFiles']): FileList | null {\n  if (!files) {\n    return null;\n  }\n\n  if (files instanceof FileList) {\n    return files;\n  }\n\n  const result = new DataTransfer();\n  for (const file of files) {\n    result.items.add(file);\n  }\n\n  return result.files;\n}\n\nfunction createInput(options: UseFileDialogOptions) {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n\n  const input = document.createElement('input');\n  input.type = 'file';\n\n  if (options.accept) {\n    input.accept = options.accept;\n  }\n\n  if (options.multiple) {\n    input.multiple = options.multiple;\n  }\n\n  if (options.capture) {\n    input.capture = options.capture;\n  }\n\n  if (options.directory) {\n    input.webkitdirectory = options.directory;\n  }\n\n  input.style.display = 'none';\n  return input;\n}\n\nexport function useFileDialog(input: UseFileDialogOptions = {}) {\n  const options: UseFileDialogOptions = { ...defaultOptions, ...input };\n  const [files, setFiles] = useState<FileList | null>(getInitialFilesList(options.initialFiles));\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const handleChange = useCallback(\n    (event: Event) => {\n      const target = event.target as HTMLInputElement;\n      if (target?.files) {\n        setFiles(target.files);\n        options.onChange?.(target.files);\n      }\n    },\n    [options.onChange]\n  );\n\n  const createAndSetupInput = useCallback(() => {\n    inputRef.current?.remove();\n    inputRef.current = createInput(options);\n\n    if (inputRef.current) {\n      inputRef.current.addEventListener('change', handleChange, { once: true });\n      document.body.appendChild(inputRef.current);\n    }\n  }, [options, handleChange]);\n\n  useIsomorphicEffect(() => {\n    createAndSetupInput();\n    return () => inputRef.current?.remove();\n  }, []);\n\n  const reset = useCallback(() => {\n    setFiles(null);\n    options.onChange?.(null);\n  }, [options.onChange]);\n\n  const open = useCallback(() => {\n    if (options.resetOnOpen) {\n      reset();\n    }\n\n    createAndSetupInput();\n    inputRef.current?.click();\n  }, [options.resetOnOpen, reset, createAndSetupInput]);\n\n  return { files, open, reset };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}