{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport dayjs from 'dayjs';\nimport { factory, useProps, useStyles, Box } from '@mantine/core';\nimport '../DatesProvider/DatesProvider.mjs';\nimport { useDatesContext } from '../DatesProvider/use-dates-context.mjs';\nimport { PickerControl } from '../PickerControl/PickerControl.mjs';\nimport { getYearInTabOrder } from './get-year-in-tab-order/get-year-in-tab-order.mjs';\nimport { getYearsData } from './get-years-data/get-years-data.mjs';\nimport { isYearDisabled } from './is-year-disabled/is-year-disabled.mjs';\nimport classes from './YearsList.module.css.mjs';\nconst defaultProps = {\n  yearsListFormat: \"YYYY\",\n  withCellSpacing: true\n};\nconst YearsList = factory((_props, ref) => {\n  const props = useProps(\"YearsList\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    decade,\n    yearsListFormat,\n    locale,\n    minDate,\n    maxDate,\n    getYearControlProps,\n    __staticSelector,\n    __getControlRef,\n    __onControlKeyDown,\n    __onControlClick,\n    __onControlMouseEnter,\n    __preventFocus,\n    __stopPropagation,\n    withCellSpacing,\n    size,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: __staticSelector || \"YearsList\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    rootSelector: \"yearsList\"\n  });\n  const ctx = useDatesContext();\n  const years = getYearsData(decade);\n  const yearInTabOrder = getYearInTabOrder({\n    years,\n    minDate,\n    maxDate,\n    getYearControlProps\n  });\n  const rows = years.map((yearsRow, rowIndex) => {\n    const cells = yearsRow.map((year, cellIndex) => {\n      const controlProps = getYearControlProps?.(year);\n      const isYearInTabOrder = dayjs(year).isSame(yearInTabOrder, \"year\");\n      return /* @__PURE__ */jsx(\"td\", {\n        ...getStyles(\"yearsListCell\"),\n        \"data-with-spacing\": withCellSpacing || void 0,\n        children: /* @__PURE__ */jsx(PickerControl, {\n          ...getStyles(\"yearsListControl\"),\n          size,\n          unstyled,\n          \"data-mantine-stop-propagation\": __stopPropagation || void 0,\n          disabled: isYearDisabled({\n            year,\n            minDate,\n            maxDate\n          }),\n          ref: node => __getControlRef?.(rowIndex, cellIndex, node),\n          ...controlProps,\n          onKeyDown: event => {\n            controlProps?.onKeyDown?.(event);\n            __onControlKeyDown?.(event, {\n              rowIndex,\n              cellIndex,\n              date: year\n            });\n          },\n          onClick: event => {\n            controlProps?.onClick?.(event);\n            __onControlClick?.(event, year);\n          },\n          onMouseEnter: event => {\n            controlProps?.onMouseEnter?.(event);\n            __onControlMouseEnter?.(event, year);\n          },\n          onMouseDown: event => {\n            controlProps?.onMouseDown?.(event);\n            __preventFocus && event.preventDefault();\n          },\n          tabIndex: __preventFocus || !isYearInTabOrder ? -1 : 0,\n          children: dayjs(year).locale(ctx.getLocale(locale)).format(yearsListFormat)\n        })\n      }, cellIndex);\n    });\n    return /* @__PURE__ */jsx(\"tr\", {\n      ...getStyles(\"yearsListRow\"),\n      children: cells\n    }, rowIndex);\n  });\n  return /* @__PURE__ */jsx(Box, {\n    component: \"table\",\n    ref,\n    size,\n    ...getStyles(\"yearsList\"),\n    ...others,\n    children: /* @__PURE__ */jsx(\"tbody\", {\n      children: rows\n    })\n  });\n});\nYearsList.classes = classes;\nYearsList.displayName = \"@mantine/dates/YearsList\";\nexport { YearsList };","map":{"version":3,"names":["defaultProps","yearsListFormat","withCellSpacing","YearsList","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","decade","locale","minDate","maxDate","getYearControlProps","__staticSelector","__getControlRef","__onControlKeyDown","__onControlClick","__onControlMouseEnter","__preventFocus","__stopPropagation","size","others","getStyles","useStyles","name","classes","rootSelector","ctx","useDatesContext","years","getYearsData","yearInTabOrder","getYearInTabOrder","rows","map","yearsRow","rowIndex","cells","year","cellIndex","controlProps","isYearInTabOrder","dayjs","isSame","jsx","children","PickerControl","disabled","isYearDisabled","node","onKeyDown","event","date","onClick","onMouseEnter","onMouseDown","preventDefault","tabIndex","getLocale","format","Box","component","displayName"],"sources":["/home/filken/dev/horti_clj/horti-ui/node_modules/@mantine/dates/src/components/YearsList/YearsList.tsx"],"sourcesContent":["import dayjs from 'dayjs';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '@mantine/core';\nimport { ControlsGroupSettings, DateStringValue } from '../../types';\nimport { useDatesContext } from '../DatesProvider';\nimport { PickerControl, PickerControlProps } from '../PickerControl';\nimport { getYearInTabOrder } from './get-year-in-tab-order/get-year-in-tab-order';\nimport { getYearsData } from './get-years-data/get-years-data';\nimport { isYearDisabled } from './is-year-disabled/is-year-disabled';\nimport classes from './YearsList.module.css';\n\nexport type YearsListStylesNames =\n  | 'yearsListControl'\n  | 'yearsList'\n  | 'yearsListCell'\n  | 'yearsListRow';\n\nexport interface YearsListSettings extends ControlsGroupSettings {\n  /** Prevents focus shift when buttons are clicked */\n  __preventFocus?: boolean;\n\n  /** Determines whether propagation for Escape key should be stopped */\n  __stopPropagation?: boolean;\n\n  /** dayjs format for years list, `'YYYY'` by default  */\n  yearsListFormat?: string;\n\n  /** Passes props down to year picker control based on date */\n  getYearControlProps?: (date: DateStringValue) => Partial<PickerControlProps>;\n\n  /** Component size */\n  size?: MantineSize;\n\n  /** Determines whether controls should be separated, `true` by default */\n  withCellSpacing?: boolean;\n}\n\nexport interface YearsListProps\n  extends BoxProps,\n    YearsListSettings,\n    StylesApiProps<YearsListFactory>,\n    ElementProps<'table'> {\n  __staticSelector?: string;\n\n  /** Decade value to display */\n  decade: DateStringValue;\n}\n\nexport type YearsListFactory = Factory<{\n  props: YearsListProps;\n  ref: HTMLTableElement;\n  stylesNames: YearsListStylesNames;\n}>;\n\nconst defaultProps: Partial<YearsListProps> = {\n  yearsListFormat: 'YYYY',\n  withCellSpacing: true,\n};\n\nexport const YearsList = factory<YearsListFactory>((_props, ref) => {\n  const props = useProps('YearsList', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    decade,\n    yearsListFormat,\n    locale,\n    minDate,\n    maxDate,\n    getYearControlProps,\n    __staticSelector,\n    __getControlRef,\n    __onControlKeyDown,\n    __onControlClick,\n    __onControlMouseEnter,\n    __preventFocus,\n    __stopPropagation,\n    withCellSpacing,\n    size,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<YearsListFactory>({\n    name: __staticSelector || 'YearsList',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    rootSelector: 'yearsList',\n  });\n\n  const ctx = useDatesContext();\n\n  const years = getYearsData(decade);\n\n  const yearInTabOrder = getYearInTabOrder({\n    years,\n    minDate,\n    maxDate,\n    getYearControlProps,\n  });\n\n  const rows = years.map((yearsRow, rowIndex) => {\n    const cells = yearsRow.map((year, cellIndex) => {\n      const controlProps = getYearControlProps?.(year);\n      const isYearInTabOrder = dayjs(year).isSame(yearInTabOrder, 'year');\n      return (\n        <td\n          key={cellIndex}\n          {...getStyles('yearsListCell')}\n          data-with-spacing={withCellSpacing || undefined}\n        >\n          <PickerControl\n            {...getStyles('yearsListControl')}\n            size={size}\n            unstyled={unstyled}\n            data-mantine-stop-propagation={__stopPropagation || undefined}\n            disabled={isYearDisabled({ year, minDate, maxDate })}\n            ref={(node) => __getControlRef?.(rowIndex, cellIndex, node!)}\n            {...controlProps}\n            onKeyDown={(event) => {\n              controlProps?.onKeyDown?.(event);\n              __onControlKeyDown?.(event, { rowIndex, cellIndex, date: year });\n            }}\n            onClick={(event) => {\n              controlProps?.onClick?.(event);\n              __onControlClick?.(event, year);\n            }}\n            onMouseEnter={(event) => {\n              controlProps?.onMouseEnter?.(event);\n              __onControlMouseEnter?.(event, year);\n            }}\n            onMouseDown={(event) => {\n              controlProps?.onMouseDown?.(event);\n              __preventFocus && event.preventDefault();\n            }}\n            tabIndex={__preventFocus || !isYearInTabOrder ? -1 : 0}\n          >\n            {dayjs(year).locale(ctx.getLocale(locale)).format(yearsListFormat)}\n          </PickerControl>\n        </td>\n      );\n    });\n\n    return (\n      <tr key={rowIndex} {...getStyles('yearsListRow')}>\n        {cells}\n      </tr>\n    );\n  });\n\n  return (\n    <Box component=\"table\" ref={ref} size={size} {...getStyles('yearsList')} {...others}>\n      <tbody>{rows}</tbody>\n    </Box>\n  );\n});\n\nYearsList.classes = classes;\nYearsList.displayName = '@mantine/dates/YearsList';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}